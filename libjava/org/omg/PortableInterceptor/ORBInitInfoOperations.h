
// DO NOT EDIT THIS FILE - it is machine generated -*- c++ -*-

#ifndef __org_omg_PortableInterceptor_ORBInitInfoOperations__
#define __org_omg_PortableInterceptor_ORBInitInfoOperations__

#pragma interface

#include <java/lang/Object.h>
#include <gcj/array.h>

extern "Java"
{
  namespace org
  {
    namespace omg
    {
      namespace CORBA
      {
          class Object;
      }
      namespace IOP
      {
          class CodecFactory;
      }
      namespace PortableInterceptor
      {
          class ClientRequestInterceptor;
          class IORInterceptor;
          class ORBInitInfoOperations;
          class PolicyFactory;
          class ServerRequestInterceptor;
      }
    }
  }
}

class org::omg::PortableInterceptor::ORBInitInfoOperations : public ::java::lang::Object
{

public:
  virtual void add_client_request_interceptor(::org::omg::PortableInterceptor::ClientRequestInterceptor *) = 0;
  virtual void add_ior_interceptor(::org::omg::PortableInterceptor::IORInterceptor *) = 0;
  virtual void add_server_request_interceptor(::org::omg::PortableInterceptor::ServerRequestInterceptor *) = 0;
  virtual jint allocate_slot_id() = 0;
  virtual JArray< ::java::lang::String * > * arguments() = 0;
  virtual ::org::omg::IOP::CodecFactory * codec_factory() = 0;
  virtual ::java::lang::String * orb_id() = 0;
  virtual void register_initial_reference(::java::lang::String *, ::org::omg::CORBA::Object *) = 0;
  virtual ::org::omg::CORBA::Object * resolve_initial_references(::java::lang::String *) = 0;
  virtual void register_policy_factory(jint, ::org::omg::PortableInterceptor::PolicyFactory *) = 0;
  static ::java::lang::Class class$;
} __attribute__ ((java_interface));

#endif // __org_omg_PortableInterceptor_ORBInitInfoOperations__
