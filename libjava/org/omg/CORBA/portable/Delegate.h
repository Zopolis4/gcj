
// DO NOT EDIT THIS FILE - it is machine generated -*- c++ -*-

#ifndef __org_omg_CORBA_portable_Delegate__
#define __org_omg_CORBA_portable_Delegate__

#pragma interface

#include <java/lang/Object.h>
#include <gcj/array.h>

extern "Java"
{
  namespace org
  {
    namespace omg
    {
      namespace CORBA
      {
          class Context;
          class ContextList;
          class DomainManager;
          class ExceptionList;
          class NVList;
          class NamedValue;
          class ORB;
          class Object;
          class Policy;
          class Request;
          class SetOverrideType;
        namespace portable
        {
            class Delegate;
            class InputStream;
            class OutputStream;
            class ServantObject;
        }
      }
    }
  }
}

class org::omg::CORBA::portable::Delegate : public ::java::lang::Object
{

public:
  Delegate();
  virtual ::org::omg::CORBA::Request * create_request(::org::omg::CORBA::Object *, ::org::omg::CORBA::Context *, ::java::lang::String *, ::org::omg::CORBA::NVList *, ::org::omg::CORBA::NamedValue *) = 0;
  virtual ::org::omg::CORBA::Request * create_request(::org::omg::CORBA::Object *, ::org::omg::CORBA::Context *, ::java::lang::String *, ::org::omg::CORBA::NVList *, ::org::omg::CORBA::NamedValue *, ::org::omg::CORBA::ExceptionList *, ::org::omg::CORBA::ContextList *) = 0;
  virtual ::org::omg::CORBA::Object * duplicate(::org::omg::CORBA::Object *) = 0;
  virtual JArray< ::org::omg::CORBA::DomainManager * > * get_domain_managers(::org::omg::CORBA::Object *);
  virtual ::org::omg::CORBA::Object * get_interface_def(::org::omg::CORBA::Object *) = 0;
  virtual ::org::omg::CORBA::Policy * get_policy(::org::omg::CORBA::Object *, jint);
  virtual jint hash(::org::omg::CORBA::Object *, jint) = 0;
  virtual jboolean is_a(::org::omg::CORBA::Object *, ::java::lang::String *) = 0;
  virtual jboolean is_equivalent(::org::omg::CORBA::Object *, ::org::omg::CORBA::Object *) = 0;
  virtual jboolean is_local(::org::omg::CORBA::Object *);
  virtual jboolean non_existent(::org::omg::CORBA::Object *) = 0;
  virtual jboolean equals(::org::omg::CORBA::Object *, ::java::lang::Object *);
  virtual jint hashCode(::org::omg::CORBA::Object *);
  virtual ::org::omg::CORBA::portable::InputStream * invoke(::org::omg::CORBA::Object *, ::org::omg::CORBA::portable::OutputStream *);
  virtual ::org::omg::CORBA::ORB * orb(::org::omg::CORBA::Object *);
  virtual void release(::org::omg::CORBA::Object *) = 0;
  virtual void releaseReply(::org::omg::CORBA::Object *, ::org::omg::CORBA::portable::InputStream *);
  virtual ::org::omg::CORBA::Request * request(::org::omg::CORBA::Object *, ::java::lang::String *) = 0;
  virtual ::org::omg::CORBA::portable::OutputStream * request(::org::omg::CORBA::Object *, ::java::lang::String *, jboolean);
  virtual void servant_postinvoke(::org::omg::CORBA::Object *, ::org::omg::CORBA::portable::ServantObject *);
  virtual ::org::omg::CORBA::portable::ServantObject * servant_preinvoke(::org::omg::CORBA::Object *, ::java::lang::String *, ::java::lang::Class *);
  virtual ::org::omg::CORBA::Object * set_policy_override(::org::omg::CORBA::Object *, JArray< ::org::omg::CORBA::Policy * > *, ::org::omg::CORBA::SetOverrideType *);
  virtual ::java::lang::String * toString(::org::omg::CORBA::Object *);
private:
  static ::java::lang::String * WHY;
public:
  static ::java::lang::Class class$;
};

#endif // __org_omg_CORBA_portable_Delegate__
