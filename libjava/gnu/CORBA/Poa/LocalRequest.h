
// DO NOT EDIT THIS FILE - it is machine generated -*- c++ -*-

#ifndef __gnu_CORBA_Poa_LocalRequest__
#define __gnu_CORBA_Poa_LocalRequest__

#pragma interface

#include <gnu/CORBA/gnuRequest.h>
#include <gcj/array.h>

extern "Java"
{
  namespace gnu
  {
    namespace CORBA
    {
      namespace CDR
      {
          class BufferedCdrOutput;
      }
      namespace GIOP
      {
          class MessageHeader;
      }
      namespace Poa
      {
          class LocalRequest;
          class LocalServerRequest;
          class gnuPOA;
          class gnuServantObject;
      }
        class StreamBasedRequest;
    }
  }
  namespace org
  {
    namespace omg
    {
      namespace CORBA
      {
        namespace portable
        {
            class InputStream;
            class InvokeHandler;
            class OutputStream;
        }
      }
      namespace PortableServer
      {
          class POA;
        namespace ServantLocatorPackage
        {
            class CookieHolder;
        }
      }
    }
  }
}

class gnu::CORBA::Poa::LocalRequest : public ::gnu::CORBA::gnuRequest
{

public:
  LocalRequest(::gnu::CORBA::Poa::gnuServantObject *, ::gnu::CORBA::Poa::gnuPOA *, JArray< jbyte > *);
public: // actually package-private
  virtual ::org::omg::CORBA::portable::InputStream * s_invoke(::org::omg::CORBA::portable::InvokeHandler *);
public:
  virtual ::org::omg::CORBA::portable::InputStream * v_invoke(::org::omg::CORBA::portable::InvokeHandler *);
  virtual void invoke();
  virtual ::org::omg::CORBA::portable::OutputStream * createExceptionReply();
  virtual ::org::omg::CORBA::portable::OutputStream * createReply();
public: // actually package-private
  virtual ::gnu::CORBA::CDR::BufferedCdrOutput * getBuffer();
  virtual jboolean isExceptionReply();
private:
  void prepareStream();
public:
  virtual ::gnu::CORBA::StreamBasedRequest * getParameterStream();
  virtual JArray< jbyte > * get_object_id();
  virtual ::org::omg::PortableServer::POA * get_POA();
public: // actually package-private
  ::org::omg::PortableServer::ServantLocatorPackage::CookieHolder * __attribute__((aligned(__alignof__( ::gnu::CORBA::gnuRequest)))) cookie;
  JArray< jbyte > * Id;
private:
  static ::gnu::CORBA::GIOP::MessageHeader * header;
public: // actually package-private
  jboolean exceptionReply;
  ::gnu::CORBA::CDR::BufferedCdrOutput * buffer;
  ::gnu::CORBA::Poa::gnuPOA * poa;
  ::gnu::CORBA::Poa::gnuServantObject * object;
  ::gnu::CORBA::Poa::LocalServerRequest * serverRequest;
public:
  static ::java::lang::Class class$;
};

#endif // __gnu_CORBA_Poa_LocalRequest__
