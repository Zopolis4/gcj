
// DO NOT EDIT THIS FILE - it is machine generated -*- c++ -*-

#ifndef __gnu_CORBA_Interceptor_ServerRequestInterceptors__
#define __gnu_CORBA_Interceptor_ServerRequestInterceptors__

#pragma interface

#include <java/lang/Object.h>
#include <gcj/array.h>

extern "Java"
{
  namespace gnu
  {
    namespace CORBA
    {
      namespace Interceptor
      {
          class Registrator;
          class ServerRequestInterceptors;
      }
    }
  }
  namespace org
  {
    namespace omg
    {
      namespace PortableInterceptor
      {
          class ServerRequestInfo;
          class ServerRequestInterceptor;
      }
    }
  }
}

class gnu::CORBA::Interceptor::ServerRequestInterceptors : public ::java::lang::Object
{

public:
  ServerRequestInterceptors(::gnu::CORBA::Interceptor::Registrator *);
  virtual void receive_request_service_contexts(::org::omg::PortableInterceptor::ServerRequestInfo *);
  virtual void receive_request(::org::omg::PortableInterceptor::ServerRequestInfo *);
  virtual void send_exception(::org::omg::PortableInterceptor::ServerRequestInfo *);
  virtual void send_other(::org::omg::PortableInterceptor::ServerRequestInfo *);
  virtual void send_reply(::org::omg::PortableInterceptor::ServerRequestInfo *);
  virtual void destroy();
  virtual ::java::lang::String * name();
private:
  JArray< ::org::omg::PortableInterceptor::ServerRequestInterceptor * > * __attribute__((aligned(__alignof__( ::java::lang::Object)))) interceptors;
public:
  static ::java::lang::Class class$;
};

#endif // __gnu_CORBA_Interceptor_ServerRequestInterceptors__
