
// DO NOT EDIT THIS FILE - it is machine generated -*- c++ -*-

#ifndef __gnu_CORBA_Interceptor_gnuClientRequestInfo__
#define __gnu_CORBA_Interceptor_gnuClientRequestInfo__

#pragma interface

#include <org/omg/CORBA/LocalObject.h>
#include <gcj/array.h>

extern "Java"
{
  namespace gnu
  {
    namespace CORBA
    {
      namespace Interceptor
      {
          class gnuClientRequestInfo;
      }
        class gnuRequest;
    }
  }
  namespace org
  {
    namespace omg
    {
      namespace CORBA
      {
          class Any;
          class Object;
          class Policy;
          class TypeCode;
      }
      namespace Dynamic
      {
          class Parameter;
      }
      namespace IOP
      {
          class ServiceContext;
          class TaggedComponent;
          class TaggedProfile;
      }
    }
  }
}

class gnu::CORBA::Interceptor::gnuClientRequestInfo : public ::org::omg::CORBA::LocalObject
{

public:
  gnuClientRequestInfo(::gnu::CORBA::gnuRequest *);
  virtual void add_request_service_context(::org::omg::IOP::ServiceContext *, jboolean);
  virtual ::org::omg::IOP::TaggedProfile * effective_profile();
  virtual ::org::omg::CORBA::Object * effective_target();
  virtual ::org::omg::IOP::TaggedComponent * get_effective_component(jint);
  virtual JArray< ::org::omg::IOP::TaggedComponent * > * get_effective_components(jint);
  virtual ::org::omg::CORBA::Policy * get_request_policy(jint);
  virtual ::java::lang::String * received_exception_id();
  virtual ::org::omg::CORBA::Any * received_exception();
  virtual ::org::omg::CORBA::Object * target();
  virtual JArray< ::org::omg::Dynamic::Parameter * > * arguments();
  virtual ::org::omg::CORBA::Any * result();
  virtual JArray< ::java::lang::String * > * contexts();
  virtual JArray< ::org::omg::CORBA::TypeCode * > * exceptions();
  virtual ::org::omg::CORBA::Object * forward_reference();
  virtual JArray< ::java::lang::String * > * operation_context();
  virtual ::org::omg::CORBA::Any * get_slot(jint);
  virtual ::java::lang::String * operation();
  virtual jshort reply_status();
  virtual jint request_id();
  virtual jboolean response_expected();
  virtual jshort sync_scope();
  virtual ::org::omg::IOP::ServiceContext * get_reply_service_context(jint);
  virtual ::org::omg::IOP::ServiceContext * get_request_service_context(jint);
private:
  static const jlong serialVersionUID = 1LL;
  ::gnu::CORBA::gnuRequest * __attribute__((aligned(__alignof__( ::org::omg::CORBA::LocalObject)))) request;
public:
  ::org::omg::CORBA::Any * m_wrapped_exception;
  static ::java::lang::Class class$;
};

#endif // __gnu_CORBA_Interceptor_gnuClientRequestInfo__
