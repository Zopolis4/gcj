
// DO NOT EDIT THIS FILE - it is machine generated -*- c++ -*-

#ifndef __gnu_javax_print_ipp_IppResponse__
#define __gnu_javax_print_ipp_IppResponse__

#pragma interface

#include <java/lang/Object.h>
#include <gcj/array.h>

extern "Java"
{
  namespace gnu
  {
    namespace javax
    {
      namespace print
      {
        namespace ipp
        {
            class IppResponse;
        }
      }
    }
  }
  namespace java
  {
    namespace net
    {
        class URI;
    }
  }
}

class gnu::javax::print::ipp::IppResponse : public ::java::lang::Object
{

public:
  IppResponse(::java::net::URI *, jshort);
public: // actually protected
  virtual void setResponseData(::java::io::InputStream *);
public:
  virtual ::java::net::URI * getURI();
  virtual jint getOperationID();
  virtual ::java::util::List * getJobAttributes();
  virtual ::java::util::List * getOperationAttributes();
  virtual ::java::util::List * getPrinterAttributes();
  virtual jint getRequestID();
  virtual jshort getStatusCode();
  virtual ::java::util::List * getUnsupportedAttributes();
  virtual JArray< jbyte > * getData();
public: // actually package-private
  static ::java::util::logging::Logger * logger;
  ::java::net::URI * __attribute__((aligned(__alignof__( ::java::lang::Object)))) uri;
  jshort operation_id;
  jshort status_code;
  jint request_id;
  ::java::util::List * operationAttributes;
  ::java::util::List * printerAttributes;
  ::java::util::List * jobAttributes;
  ::java::util::List * unsupportedAttributes;
  JArray< jbyte > * data;
public:
  static ::java::lang::Class class$;
};

#endif // __gnu_javax_print_ipp_IppResponse__
