
// DO NOT EDIT THIS FILE - it is machine generated -*- c++ -*-

#ifndef __gnu_javax_crypto_keyring_GnuPrivateKeyring__
#define __gnu_javax_crypto_keyring_GnuPrivateKeyring__

#pragma interface

#include <gnu/javax/crypto/keyring/BaseKeyring.h>
#include <gcj/array.h>

extern "Java"
{
  namespace gnu
  {
    namespace javax
    {
      namespace crypto
      {
        namespace keyring
        {
            class GnuPrivateKeyring;
        }
      }
    }
  }
  namespace java
  {
    namespace security
    {
        class Key;
        class PublicKey;
      namespace cert
      {
          class Certificate;
      }
    }
  }
}

class gnu::javax::crypto::keyring::GnuPrivateKeyring : public ::gnu::javax::crypto::keyring::BaseKeyring
{

public:
  GnuPrivateKeyring(::java::lang::String *, jint, ::java::lang::String *, ::java::lang::String *, jint);
  GnuPrivateKeyring();
  virtual jboolean containsPrivateKey(::java::lang::String *);
  virtual ::java::security::Key * getPrivateKey(::java::lang::String *, JArray< jchar > *);
  virtual void putPrivateKey(::java::lang::String *, ::java::security::Key *, JArray< jchar > *);
  virtual jboolean containsPublicKey(::java::lang::String *);
  virtual ::java::security::PublicKey * getPublicKey(::java::lang::String *);
  virtual void putPublicKey(::java::lang::String *, ::java::security::PublicKey *);
  virtual jboolean containsCertPath(::java::lang::String *);
  virtual JArray< ::java::security::cert::Certificate * > * getCertPath(::java::lang::String *);
  virtual void putCertPath(::java::lang::String *, JArray< ::java::security::cert::Certificate * > *);
public: // actually protected
  virtual void load(::java::io::InputStream *, JArray< jchar > *);
  virtual void store(::java::io::OutputStream *, JArray< jchar > *);
private:
  static ::java::util::logging::Logger * log;
public:
  static const jint USAGE = 3;
public: // actually protected
  ::java::lang::String * __attribute__((aligned(__alignof__( ::gnu::javax::crypto::keyring::BaseKeyring)))) mac;
  jint maclen;
  ::java::lang::String * cipher;
  ::java::lang::String * mode;
  jint keylen;
public:
  static ::java::lang::Class class$;
};

#endif // __gnu_javax_crypto_keyring_GnuPrivateKeyring__
