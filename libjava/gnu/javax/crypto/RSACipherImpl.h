
// DO NOT EDIT THIS FILE - it is machine generated -*- c++ -*-

#ifndef __gnu_javax_crypto_RSACipherImpl__
#define __gnu_javax_crypto_RSACipherImpl__

#pragma interface

#include <javax/crypto/CipherSpi.h>
#include <gcj/array.h>

extern "Java"
{
  namespace gnu
  {
    namespace classpath
    {
      namespace debug
      {
          class SystemLogger;
      }
    }
    namespace javax
    {
      namespace crypto
      {
          class RSACipherImpl;
      }
    }
  }
  namespace java
  {
    namespace math
    {
        class BigInteger;
    }
    namespace security
    {
        class AlgorithmParameters;
        class Key;
        class SecureRandom;
      namespace interfaces
      {
          class RSAPrivateKey;
          class RSAPublicKey;
      }
      namespace spec
      {
          class AlgorithmParameterSpec;
      }
    }
  }
}

class gnu::javax::crypto::RSACipherImpl : public ::javax::crypto::CipherSpi
{

public:
  RSACipherImpl();
public: // actually protected
  virtual void engineSetMode(::java::lang::String *);
  virtual void engineSetPadding(::java::lang::String *);
  virtual jint engineGetBlockSize();
  virtual jint engineGetOutputSize(jint);
  virtual jint engineGetKeySize(::java::security::Key *);
  virtual JArray< jbyte > * engineGetIV();
  virtual ::java::security::AlgorithmParameters * engineGetParameters();
  virtual void engineInit(jint, ::java::security::Key *, ::java::security::SecureRandom *);
  virtual void engineInit(jint, ::java::security::Key *, ::java::security::spec::AlgorithmParameterSpec *, ::java::security::SecureRandom *);
  virtual void engineInit(jint, ::java::security::Key *, ::java::security::AlgorithmParameters *, ::java::security::SecureRandom *);
  virtual JArray< jbyte > * engineUpdate(JArray< jbyte > *, jint, jint);
  virtual jint engineUpdate(JArray< jbyte > *, jint, jint, JArray< jbyte > *, jint);
  virtual JArray< jbyte > * engineDoFinal(JArray< jbyte > *, jint, jint);
  virtual jint engineDoFinal(JArray< jbyte > *, jint);
  virtual jint engineDoFinal(JArray< jbyte > *, jint, jint, JArray< jbyte > *, jint);
private:
  JArray< jbyte > * rsaDecrypt(::java::math::BigInteger *);
  static ::gnu::classpath::debug::SystemLogger * logger;
  static JArray< jbyte > * EMPTY;
  jint __attribute__((aligned(__alignof__( ::javax::crypto::CipherSpi)))) opmode;
  ::java::security::interfaces::RSAPrivateKey * decipherKey;
  ::java::security::interfaces::RSAPublicKey * blindingKey;
  ::java::security::interfaces::RSAPublicKey * encipherKey;
  ::java::security::SecureRandom * random;
  JArray< jbyte > * dataBuffer;
  jint pos;
public:
  static ::java::lang::Class class$;
};

#endif // __gnu_javax_crypto_RSACipherImpl__
