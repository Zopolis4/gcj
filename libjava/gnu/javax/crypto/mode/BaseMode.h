
// DO NOT EDIT THIS FILE - it is machine generated -*- c++ -*-

#ifndef __gnu_javax_crypto_mode_BaseMode__
#define __gnu_javax_crypto_mode_BaseMode__

#pragma interface

#include <java/lang/Object.h>
#include <gcj/array.h>

extern "Java"
{
  namespace gnu
  {
    namespace javax
    {
      namespace crypto
      {
        namespace cipher
        {
            class IBlockCipher;
        }
        namespace mode
        {
            class BaseMode;
        }
      }
    }
  }
}

class gnu::javax::crypto::mode::BaseMode : public ::java::lang::Object
{

public: // actually protected
  BaseMode(::java::lang::String *, ::gnu::javax::crypto::cipher::IBlockCipher *, jint);
public:
  virtual void update(JArray< jbyte > *, jint, JArray< jbyte > *, jint);
  virtual ::java::lang::String * name();
  virtual jint defaultBlockSize();
  virtual jint defaultKeySize();
  virtual ::java::util::Iterator * blockSizes();
  virtual ::java::util::Iterator * keySizes();
  virtual void init(::java::util::Map *);
  virtual jint currentBlockSize();
  virtual void reset();
  virtual jboolean selfTest();
  virtual ::java::lang::Object * clone() = 0;
  virtual void setup() = 0;
  virtual void teardown() = 0;
  virtual void encryptBlock(JArray< jbyte > *, jint, JArray< jbyte > *, jint) = 0;
  virtual void decryptBlock(JArray< jbyte > *, jint, JArray< jbyte > *, jint) = 0;
private:
  jboolean testSymmetry(jint, jint);
public: // actually protected
  ::java::lang::String * __attribute__((aligned(__alignof__( ::java::lang::Object)))) name__;
  jint state;
  ::gnu::javax::crypto::cipher::IBlockCipher * cipher;
  jint cipherBlockSize;
  jint modeBlockSize;
  JArray< jbyte > * iv;
  ::java::lang::Object * lock;
public:
  static ::java::lang::Class class$;
};

#endif // __gnu_javax_crypto_mode_BaseMode__
