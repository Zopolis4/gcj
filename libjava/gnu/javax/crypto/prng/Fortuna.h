
// DO NOT EDIT THIS FILE - it is machine generated -*- c++ -*-

#ifndef __gnu_javax_crypto_prng_Fortuna__
#define __gnu_javax_crypto_prng_Fortuna__

#pragma interface

#include <gnu/java/security/prng/BasePRNG.h>
#include <gcj/array.h>

extern "Java"
{
  namespace gnu
  {
    namespace java
    {
      namespace security
      {
        namespace hash
        {
            class IMessageDigest;
        }
        namespace prng
        {
            class RandomEvent;
        }
      }
    }
    namespace javax
    {
      namespace crypto
      {
        namespace prng
        {
            class Fortuna;
            class Fortuna$Generator;
        }
      }
    }
  }
}

class gnu::javax::crypto::prng::Fortuna : public ::gnu::java::security::prng::BasePRNG
{

public:
  Fortuna();
  virtual void setup(::java::util::Map *);
  virtual void fillBlock();
  virtual void addRandomByte(jbyte);
  virtual void addRandomBytes(JArray< jbyte > *, jint, jint);
  virtual void addRandomEvent(::gnu::java::security::prng::RandomEvent *);
private:
  void writeObject(::java::io::ObjectOutputStream *);
  void readObject(::java::io::ObjectInputStream *);
  static const jlong serialVersionUID = 16435934LL;
  static const jint SEED_FILE_SIZE = 64;
  static const jint NUM_POOLS = 32;
  static const jint MIN_POOL_SIZE = 64;
  ::gnu::javax::crypto::prng::Fortuna$Generator * __attribute__((aligned(__alignof__( ::gnu::java::security::prng::BasePRNG)))) generator;
  JArray< ::gnu::java::security::hash::IMessageDigest * > * pools;
  jlong lastReseed;
  jint pool;
  jint pool0Count;
  jint reseedCount;
public:
  static ::java::lang::String * SEED;
  static ::java::lang::Class class$;
};

#endif // __gnu_javax_crypto_prng_Fortuna__
