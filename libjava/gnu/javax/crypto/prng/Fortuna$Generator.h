
// DO NOT EDIT THIS FILE - it is machine generated -*- c++ -*-

#ifndef __gnu_javax_crypto_prng_Fortuna$Generator__
#define __gnu_javax_crypto_prng_Fortuna$Generator__

#pragma interface

#include <gnu/java/security/prng/BasePRNG.h>
#include <gcj/array.h>

extern "Java"
{
  namespace gnu
  {
    namespace java
    {
      namespace security
      {
        namespace hash
        {
            class IMessageDigest;
        }
      }
    }
    namespace javax
    {
      namespace crypto
      {
        namespace cipher
        {
            class IBlockCipher;
        }
        namespace prng
        {
            class Fortuna$Generator;
        }
      }
    }
  }
}

class gnu::javax::crypto::prng::Fortuna$Generator : public ::gnu::java::security::prng::BasePRNG
{

public:
  Fortuna$Generator(::gnu::javax::crypto::cipher::IBlockCipher *, ::gnu::java::security::hash::IMessageDigest *);
  virtual jbyte nextByte();
  virtual void nextBytes(JArray< jbyte > *, jint, jint);
  virtual void addRandomByte(jbyte);
  virtual void addRandomBytes(JArray< jbyte > *, jint, jint);
  virtual void fillBlock();
  virtual void setup(::java::util::Map *);
private:
  void resetKey();
  void incrementCounter();
  static const jint LIMIT = 1048576;
  ::gnu::javax::crypto::cipher::IBlockCipher * __attribute__((aligned(__alignof__( ::gnu::java::security::prng::BasePRNG)))) cipher;
  ::gnu::java::security::hash::IMessageDigest * hash;
  JArray< jbyte > * counter;
  JArray< jbyte > * key;
  jboolean seeded;
public:
  static ::java::lang::Class class$;
};

#endif // __gnu_javax_crypto_prng_Fortuna$Generator__
