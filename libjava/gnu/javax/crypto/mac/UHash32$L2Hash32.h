
// DO NOT EDIT THIS FILE - it is machine generated -*- c++ -*-

#ifndef __gnu_javax_crypto_mac_UHash32$L2Hash32__
#define __gnu_javax_crypto_mac_UHash32$L2Hash32__

#pragma interface

#include <java/lang/Object.h>
#include <gcj/array.h>

extern "Java"
{
  namespace gnu
  {
    namespace javax
    {
      namespace crypto
      {
        namespace mac
        {
            class UHash32;
            class UHash32$L2Hash32;
        }
      }
    }
  }
  namespace java
  {
    namespace math
    {
        class BigInteger;
    }
  }
}

class gnu::javax::crypto::mac::UHash32$L2Hash32 : public ::java::lang::Object
{

public: // actually package-private
  UHash32$L2Hash32(::gnu::javax::crypto::mac::UHash32 *, JArray< jbyte > *);
private:
  UHash32$L2Hash32(::gnu::javax::crypto::mac::UHash32 *, ::gnu::javax::crypto::mac::UHash32$L2Hash32 *);
public:
  virtual ::java::lang::Object * clone();
public: // actually package-private
  virtual void update(JArray< jbyte > *, jint, jint);
  virtual JArray< jbyte > * digest();
  virtual void reset();
private:
  JArray< jbyte > * yTo16bytes();
  void poly(jint, ::java::math::BigInteger *, ::java::math::BigInteger *, JArray< jbyte > *, jint, jint);
  ::java::math::BigInteger * __attribute__((aligned(__alignof__( ::java::lang::Object)))) k64;
  ::java::math::BigInteger * k128;
  ::java::math::BigInteger * y;
  jboolean highBound;
  jlong bytesSoFar;
  ::java::io::ByteArrayOutputStream * buffer;
public: // actually package-private
  ::gnu::javax::crypto::mac::UHash32 * this$0;
public:
  static ::java::lang::Class class$;
};

#endif // __gnu_javax_crypto_mac_UHash32$L2Hash32__
