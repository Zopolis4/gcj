
// DO NOT EDIT THIS FILE - it is machine generated -*- c++ -*-

#ifndef __gnu_javax_crypto_assembly_Transformer__
#define __gnu_javax_crypto_assembly_Transformer__

#pragma interface

#include <java/lang/Object.h>
#include <gcj/array.h>

extern "Java"
{
  namespace gnu
  {
    namespace javax
    {
      namespace crypto
      {
        namespace assembly
        {
            class Cascade;
            class Direction;
            class Operation;
            class Transformer;
        }
        namespace pad
        {
            class IPad;
        }
      }
    }
  }
}

class gnu::javax::crypto::assembly::Transformer : public ::java::lang::Object
{

public: // actually protected
  Transformer();
public:
  static ::gnu::javax::crypto::assembly::Transformer * getCascadeTransformer(::gnu::javax::crypto::assembly::Cascade *);
  static ::gnu::javax::crypto::assembly::Transformer * getPaddingTransformer(::gnu::javax::crypto::pad::IPad *);
  static ::gnu::javax::crypto::assembly::Transformer * getDeflateTransformer();
  virtual void setMode(::gnu::javax::crypto::assembly::Operation *);
  virtual jboolean isPreProcessing();
  virtual jboolean isPostProcessing();
  virtual void init(::java::util::Map *);
  virtual jint currentBlockSize();
  virtual void reset();
  virtual JArray< jbyte > * update(jbyte);
  virtual JArray< jbyte > * update(JArray< jbyte > *);
  virtual JArray< jbyte > * update(JArray< jbyte > *, jint, jint);
  virtual JArray< jbyte > * lastUpdate();
  virtual JArray< jbyte > * lastUpdate(jbyte);
  virtual JArray< jbyte > * lastUpdate(JArray< jbyte > *);
  virtual JArray< jbyte > * lastUpdate(JArray< jbyte > *, jint, jint);
private:
  JArray< jbyte > * forwardUpdate(JArray< jbyte > *, jint, jint);
  JArray< jbyte > * inverseUpdate(JArray< jbyte > *, jint, jint);
  JArray< jbyte > * preTransform(JArray< jbyte > *, jint, jint);
  JArray< jbyte > * postTransform(JArray< jbyte > *, jint, jint);
  JArray< jbyte > * lastForwardUpdate();
  JArray< jbyte > * lastInverseUpdate();
  JArray< jbyte > * preLastTransform();
  JArray< jbyte > * postLastTransform();
public: // actually package-private
  virtual void initDelegate(::java::util::Map *) = 0;
  virtual jint delegateBlockSize() = 0;
  virtual void resetDelegate() = 0;
  virtual JArray< jbyte > * updateDelegate(JArray< jbyte > *, jint, jint) = 0;
  virtual JArray< jbyte > * lastUpdateDelegate() = 0;
public:
  static ::java::lang::String * DIRECTION;
public: // actually protected
  ::gnu::javax::crypto::assembly::Direction * __attribute__((aligned(__alignof__( ::java::lang::Object)))) wired;
  ::gnu::javax::crypto::assembly::Operation * mode;
  ::gnu::javax::crypto::assembly::Transformer * tail;
  ::java::io::ByteArrayOutputStream * inBuffer;
  ::java::io::ByteArrayOutputStream * outBuffer;
public:
  static ::java::lang::Class class$;
};

#endif // __gnu_javax_crypto_assembly_Transformer__
