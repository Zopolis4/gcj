
// DO NOT EDIT THIS FILE - it is machine generated -*- c++ -*-

#ifndef __gnu_javax_crypto_assembly_Assembly__
#define __gnu_javax_crypto_assembly_Assembly__

#pragma interface

#include <java/lang/Object.h>
#include <gcj/array.h>

extern "Java"
{
  namespace gnu
  {
    namespace javax
    {
      namespace crypto
      {
        namespace assembly
        {
            class Assembly;
            class Direction;
            class Operation;
            class Transformer;
        }
      }
    }
  }
}

class gnu::javax::crypto::assembly::Assembly : public ::java::lang::Object
{

public:
  Assembly();
  virtual void addPreTransformer(::gnu::javax::crypto::assembly::Transformer *);
  virtual void addPostTransformer(::gnu::javax::crypto::assembly::Transformer *);
  virtual void init(::java::util::Map *);
  virtual void reset();
  virtual JArray< jbyte > * update(jbyte);
  virtual JArray< jbyte > * update(JArray< jbyte > *);
  virtual JArray< jbyte > * update(JArray< jbyte > *, jint, jint);
  virtual JArray< jbyte > * lastUpdate();
  virtual JArray< jbyte > * lastUpdate(jbyte);
  virtual JArray< jbyte > * lastUpdate(JArray< jbyte > *);
  virtual JArray< jbyte > * lastUpdate(JArray< jbyte > *, jint, jint);
private:
  void wireTransformer(::gnu::javax::crypto::assembly::Transformer *, ::gnu::javax::crypto::assembly::Operation *);
public:
  static ::java::lang::String * DIRECTION;
private:
  ::gnu::javax::crypto::assembly::Direction * __attribute__((aligned(__alignof__( ::java::lang::Object)))) wired;
  ::gnu::javax::crypto::assembly::Transformer * head;
public:
  static ::java::lang::Class class$;
};

#endif // __gnu_javax_crypto_assembly_Assembly__
