
// DO NOT EDIT THIS FILE - it is machine generated -*- c++ -*-

#ifndef __gnu_javax_crypto_assembly_Cascade__
#define __gnu_javax_crypto_assembly_Cascade__

#pragma interface

#include <java/lang/Object.h>
#include <gcj/array.h>

extern "Java"
{
  namespace gnu
  {
    namespace javax
    {
      namespace crypto
      {
        namespace assembly
        {
            class Cascade;
            class Direction;
            class Stage;
        }
      }
    }
  }
}

class gnu::javax::crypto::assembly::Cascade : public ::java::lang::Object
{

public:
  Cascade();
private:
  static jint lcm(jint, jint);
public:
  virtual ::java::lang::Object * append(::gnu::javax::crypto::assembly::Stage *);
  virtual ::java::lang::Object * prepend(::gnu::javax::crypto::assembly::Stage *);
  virtual ::java::lang::Object * insert(jint, ::gnu::javax::crypto::assembly::Stage *);
  virtual jint size();
  virtual ::java::util::Iterator * stages();
  virtual ::java::util::Set * blockSizes();
  virtual void init(::java::util::Map *);
  virtual jint currentBlockSize();
  virtual void reset();
  virtual void update(JArray< jbyte > *, jint, JArray< jbyte > *, jint);
  virtual jboolean selfTest();
  static ::java::lang::String * DIRECTION;
public: // actually protected
  ::java::util::HashMap * __attribute__((aligned(__alignof__( ::java::lang::Object)))) stages__;
  ::java::util::LinkedList * stageKeys;
  ::gnu::javax::crypto::assembly::Direction * wired;
  jint blockSize;
public:
  static ::java::lang::Class class$;
};

#endif // __gnu_javax_crypto_assembly_Cascade__
