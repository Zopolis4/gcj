
// DO NOT EDIT THIS FILE - it is machine generated -*- c++ -*-

#ifndef __gnu_javax_swing_text_html_parser_htmlValidator__
#define __gnu_javax_swing_text_html_parser_htmlValidator__

#pragma interface

#include <java/lang/Object.h>
extern "Java"
{
  namespace gnu
  {
    namespace javax
    {
      namespace swing
      {
        namespace text
        {
          namespace html
          {
            namespace parser
            {
                class htmlAttributeSet;
                class htmlValidator;
              namespace models
              {
                  class node;
              }
            }
          }
        }
      }
    }
  }
  namespace javax
  {
    namespace swing
    {
      namespace text
      {
        namespace html
        {
          namespace parser
          {
              class AttributeList;
              class DTD;
              class Element;
              class TagElement;
          }
        }
      }
    }
  }
}

class gnu::javax::swing::text::html::parser::htmlValidator : public ::java::lang::Object
{

public:
  htmlValidator(::javax::swing::text::html::parser::DTD *);
  virtual void closeAll();
  virtual jboolean closeTag(::javax::swing::text::html::parser::TagElement *);
  virtual void openTag(::javax::swing::text::html::parser::TagElement *, ::gnu::javax::swing::text::html::parser::htmlAttributeSet *);
  virtual void restart();
  virtual ::java::lang::Object * tagIsValidForContext(::javax::swing::text::html::parser::TagElement *);
  virtual void validateTag(::javax::swing::text::html::parser::TagElement *, ::gnu::javax::swing::text::html::parser::htmlAttributeSet *);
public: // actually protected
  virtual void checkContentModel(::javax::swing::text::html::parser::TagElement *, jboolean);
  virtual void handleSupposedEndTag(::javax::swing::text::html::parser::Element *) = 0;
  virtual void handleSupposedStartTag(::javax::swing::text::html::parser::Element *) = 0;
  virtual void s_error(::java::lang::String *) = 0;
  virtual void validateParameters(::javax::swing::text::html::parser::TagElement *, ::gnu::javax::swing::text::html::parser::htmlAttributeSet *);
private:
  ::gnu::javax::swing::text::html::parser::models::node * getCurrentContentModel();
  void closeLast();
  void openFictionalTag(::javax::swing::text::html::parser::Element *);
  void validateAttribute(::javax::swing::text::html::parser::TagElement *, ::gnu::javax::swing::text::html::parser::htmlAttributeSet *, ::java::util::Enumeration *);
  void validateAttributeWithValueList(::javax::swing::text::html::parser::TagElement *, ::java::lang::Object *, ::javax::swing::text::html::parser::AttributeList *, ::java::lang::String *);
  void validateNameOrIdAttribute(::javax::swing::text::html::parser::TagElement *, ::java::lang::Object *, ::java::lang::String *);
  void validateNumberAttribute(::javax::swing::text::html::parser::TagElement *, ::java::lang::Object *, ::java::lang::String *);
public: // actually protected
  ::javax::swing::text::html::parser::DTD * __attribute__((aligned(__alignof__( ::java::lang::Object)))) dtd;
  ::java::util::LinkedList * stack;
public:
  static ::java::lang::Class class$;
};

#endif // __gnu_javax_swing_text_html_parser_htmlValidator__
