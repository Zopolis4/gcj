
// DO NOT EDIT THIS FILE - it is machine generated -*- c++ -*-

#ifndef __gnu_javax_sound_sampled_AU_AUReader$AUHeader__
#define __gnu_javax_sound_sampled_AU_AUReader$AUHeader__

#pragma interface

#include <java/lang/Object.h>
extern "Java"
{
  namespace gnu
  {
    namespace javax
    {
      namespace sound
      {
        namespace sampled
        {
          namespace AU
          {
              class AUReader$AUHeader;
          }
        }
      }
    }
  }
  namespace javax
  {
    namespace sound
    {
      namespace sampled
      {
          class AudioFileFormat;
          class AudioFormat;
      }
    }
  }
}

class gnu::javax::sound::sampled::AU::AUReader$AUHeader : public ::java::lang::Object
{

public:
  AUReader$AUHeader(::java::io::InputStream *);
  virtual ::javax::sound::sampled::AudioFormat * getAudioFormat();
  virtual ::javax::sound::sampled::AudioFileFormat * getAudioFileFormat();
private:
  static const jint MAGIC = 779316836;
public:
  static const jint SIZE = 24;
  static const jint ULAW = 1;
  static const jint PCM8 = 2;
  static const jint PCM16 = 3;
  static const jint PCM24 = 4;
  static const jint PCM32 = 5;
  static const jint IEEE32 = 6;
  static const jint IEEE64 = 7;
  static const jint G721 = 23;
  static const jint G722 = 24;
  static const jint G723 = 25;
  static const jint G723_5BIT = 26;
  static const jint ALAW = 27;
  jint __attribute__((aligned(__alignof__( ::java::lang::Object)))) headerSize;
  jint fileSize;
  jint encoding;
  jint sampleRate;
  jint channels;
  jint sampleSizeInBits;
  static ::java::lang::Class class$;
};

#endif // __gnu_javax_sound_sampled_AU_AUReader$AUHeader__
