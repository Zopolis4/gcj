
// DO NOT EDIT THIS FILE - it is machine generated -*- c++ -*-

#ifndef __gnu_javax_sound_midi_dssi_DSSIMidiDeviceProvider__
#define __gnu_javax_sound_midi_dssi_DSSIMidiDeviceProvider__

#pragma interface

#include <javax/sound/midi/spi/MidiDeviceProvider.h>
#include <gcj/array.h>

extern "Java"
{
  namespace gnu
  {
    namespace javax
    {
      namespace sound
      {
        namespace midi
        {
          namespace dssi
          {
              class DSSIMidiDeviceProvider;
              class DSSIMidiDeviceProvider$DSSIInfo;
          }
        }
      }
    }
  }
  namespace javax
  {
    namespace sound
    {
      namespace midi
      {
          class MidiDevice;
          class MidiDevice$Info;
      }
    }
  }
}

class gnu::javax::sound::midi::dssi::DSSIMidiDeviceProvider : public ::javax::sound::midi::spi::MidiDeviceProvider
{

public: // actually package-private
  static jlong dlopen_(::java::lang::String *);
  static void dlclose_(jlong);
  static jlong getDSSIHandle_(jlong, jlong);
  static ::java::lang::String * getDSSIName_(jlong);
  static ::java::lang::String * getDSSICopyright_(jlong);
  static ::java::lang::String * getDSSIVendor_(jlong);
  static ::java::lang::String * getDSSILabel_(jlong);
private:
  static ::java::util::List * examineLibrary(::java::lang::String *);
public:
  DSSIMidiDeviceProvider();
  virtual JArray< ::javax::sound::midi::MidiDevice$Info * > * getDeviceInfo();
  virtual ::javax::sound::midi::MidiDevice * getDevice(::javax::sound::midi::MidiDevice$Info *);
private:
  static JArray< ::gnu::javax::sound::midi::dssi::DSSIMidiDeviceProvider$DSSIInfo * > * infos;
public:
  static ::java::lang::Class class$;
};

#endif // __gnu_javax_sound_midi_dssi_DSSIMidiDeviceProvider__
