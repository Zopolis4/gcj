
// DO NOT EDIT THIS FILE - it is machine generated -*- c++ -*-

#ifndef __gnu_javax_net_ssl_provider_SSLEngineImpl__
#define __gnu_javax_net_ssl_provider_SSLEngineImpl__

#pragma interface

#include <javax/net/ssl/SSLEngine.h>
#include <gcj/array.h>

extern "Java"
{
  namespace gnu
  {
    namespace classpath
    {
      namespace debug
      {
          class SystemLogger;
      }
    }
    namespace javax
    {
      namespace net
      {
        namespace ssl
        {
            class SSLRecordHandler;
          namespace provider
          {
              class AbstractHandshake;
              class Alert;
              class InputSecurityParameters;
              class OutputSecurityParameters;
              class SSLContextImpl;
              class SSLEngineImpl;
              class SSLEngineImpl$Mode;
              class SessionImpl;
          }
        }
      }
    }
  }
  namespace java
  {
    namespace nio
    {
        class ByteBuffer;
    }
  }
  namespace javax
  {
    namespace net
    {
      namespace ssl
      {
          class SSLEngineResult;
          class SSLEngineResult$HandshakeStatus;
          class SSLSession;
      }
    }
  }
}

class gnu::javax::net::ssl::provider::SSLEngineImpl : public ::javax::net::ssl::SSLEngine
{

public: // actually package-private
  SSLEngineImpl(::gnu::javax::net::ssl::provider::SSLContextImpl *, ::java::lang::String *, jint);
  static JArray< ::java::lang::String * > * defaultSuites();
public:
  void beginHandshake();
  void closeInbound();
  void closeOutbound();
  ::java::lang::Runnable * getDelegatedTask();
  JArray< ::java::lang::String * > * getEnabledCipherSuites();
  JArray< ::java::lang::String * > * getEnabledProtocols();
  jboolean getEnableSessionCreation();
  ::javax::net::ssl::SSLEngineResult$HandshakeStatus * getHandshakeStatus();
  jboolean getNeedClientAuth();
  ::javax::net::ssl::SSLSession * getSession();
  jboolean getUseClientMode();
  jboolean getWantClientAuth();
  jboolean isInboundDone();
  jboolean isOutboundDone();
  void setEnableSessionCreation(jboolean);
  void setEnabledCipherSuites(JArray< ::java::lang::String * > *);
  void setEnabledProtocols(JArray< ::java::lang::String * > *);
  JArray< ::java::lang::String * > * getSupportedCipherSuites();
  JArray< ::java::lang::String * > * getSupportedProtocols();
  void setNeedClientAuth(jboolean);
  void setUseClientMode(jboolean);
  void setWantClientAuth(jboolean);
  ::javax::net::ssl::SSLEngineResult * unwrap(::java::nio::ByteBuffer *, JArray< ::java::nio::ByteBuffer * > *, jint, jint);
  ::javax::net::ssl::SSLEngineResult * wrap(JArray< ::java::nio::ByteBuffer * > *, jint, jint, ::java::nio::ByteBuffer *);
public: // actually package-private
  ::gnu::javax::net::ssl::provider::SessionImpl * session();
  void setSession(::gnu::javax::net::ssl::provider::SessionImpl *);
  void changeCipherSpec();
  static JArray< jint > * $SWITCH_TABLE$gnu$javax$net$ssl$provider$SSLEngineImpl$Mode();
  ::gnu::javax::net::ssl::provider::SSLContextImpl * __attribute__((aligned(__alignof__( ::javax::net::ssl::SSLEngine)))) contextImpl;
private:
  JArray< ::gnu::javax::net::ssl::SSLRecordHandler * > * handlers;
  static ::gnu::classpath::debug::SystemLogger * logger;
  ::gnu::javax::net::ssl::provider::SessionImpl * session__;
  ::gnu::javax::net::ssl::provider::InputSecurityParameters * insec;
  ::gnu::javax::net::ssl::provider::OutputSecurityParameters * outsec;
  jboolean inClosed;
  jboolean outClosed;
  jboolean createSessions;
  jboolean needClientAuth;
  jboolean wantClientAuth;
  jboolean initialHandshakeDone;
  ::gnu::javax::net::ssl::provider::AbstractHandshake * handshake;
  ::gnu::javax::net::ssl::provider::Alert * lastAlert;
  ::javax::net::ssl::SSLEngineResult$HandshakeStatus * handshakeStatus;
  jboolean changeCipherSpec__;
  JArray< ::java::lang::String * > * enabledSuites;
  JArray< ::java::lang::String * > * enabledProtocols;
  ::java::nio::ByteBuffer * alertBuffer;
  ::gnu::javax::net::ssl::provider::SSLEngineImpl$Mode * mode;
  static JArray< jint > * $SWITCH_TABLE$gnu$javax$net$ssl$provider$SSLEngineImpl$Mode__;
public:
  static ::java::lang::Class class$;
};

#endif // __gnu_javax_net_ssl_provider_SSLEngineImpl__
