
// DO NOT EDIT THIS FILE - it is machine generated -*- c++ -*-

#ifndef __gnu_javax_net_ssl_provider_ServerHandshake$GenDH__
#define __gnu_javax_net_ssl_provider_ServerHandshake$GenDH__

#pragma interface

#include <gnu/javax/net/ssl/provider/DelegatedTask.h>
extern "Java"
{
  namespace gnu
  {
    namespace javax
    {
      namespace net
      {
        namespace ssl
        {
          namespace provider
          {
              class ServerHandshake;
              class ServerHandshake$GenDH;
          }
        }
      }
    }
  }
  namespace java
  {
    namespace nio
    {
        class ByteBuffer;
    }
  }
}

class gnu::javax::net::ssl::provider::ServerHandshake$GenDH : public ::gnu::javax::net::ssl::provider::DelegatedTask
{

  ServerHandshake$GenDH(::gnu::javax::net::ssl::provider::ServerHandshake *);
public: // actually protected
  virtual void implRun();
public: // actually package-private
  ServerHandshake$GenDH(::gnu::javax::net::ssl::provider::ServerHandshake *, ::gnu::javax::net::ssl::provider::ServerHandshake$GenDH *);
  ::java::nio::ByteBuffer * __attribute__((aligned(__alignof__( ::gnu::javax::net::ssl::provider::DelegatedTask)))) paramsBuffer;
  ::java::nio::ByteBuffer * sigBuffer;
  ::gnu::javax::net::ssl::provider::ServerHandshake * this$0;
public:
  static ::java::lang::Class class$;
};

#endif // __gnu_javax_net_ssl_provider_ServerHandshake$GenDH__
