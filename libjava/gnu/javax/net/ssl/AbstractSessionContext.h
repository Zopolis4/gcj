
// DO NOT EDIT THIS FILE - it is machine generated -*- c++ -*-

#ifndef __gnu_javax_net_ssl_AbstractSessionContext__
#define __gnu_javax_net_ssl_AbstractSessionContext__

#pragma interface

#include <java/lang/Object.h>
#include <gcj/array.h>

extern "Java"
{
  namespace gnu
  {
    namespace javax
    {
      namespace net
      {
        namespace ssl
        {
            class AbstractSessionContext;
            class Session;
        }
      }
    }
  }
  namespace javax
  {
    namespace net
    {
      namespace ssl
      {
          class SSLSession;
      }
    }
  }
}

class gnu::javax::net::ssl::AbstractSessionContext : public ::java::lang::Object
{

public:
  static ::gnu::javax::net::ssl::AbstractSessionContext * newInstance();
  static void setImplClass(::java::lang::Class *);
public: // actually protected
  AbstractSessionContext(jint);
public:
  virtual ::javax::net::ssl::SSLSession * getSession(JArray< jbyte > *);
  virtual ::javax::net::ssl::SSLSession * getSession(::java::lang::String *, jint);
public: // actually protected
  virtual ::gnu::javax::net::ssl::Session * implGet(JArray< jbyte > *) = 0;
public:
  virtual jint getSessionTimeout();
  virtual void load(JArray< jchar > *) = 0;
  virtual void put(::gnu::javax::net::ssl::Session *) = 0;
  virtual void remove(JArray< jbyte > *) = 0;
  virtual void setSessionTimeout(jint);
  virtual void store(JArray< jchar > *) = 0;
  virtual ::java::util::Enumeration * getIds() = 0;
  virtual jint getSessionCacheSize() = 0;
  virtual void setSessionCacheSize(jint) = 0;
public: // actually protected
  jlong __attribute__((aligned(__alignof__( ::java::lang::Object)))) timeout;
private:
  static ::java::lang::Class * implClass;
public:
  static ::java::lang::Class class$;
};

#endif // __gnu_javax_net_ssl_AbstractSessionContext__
