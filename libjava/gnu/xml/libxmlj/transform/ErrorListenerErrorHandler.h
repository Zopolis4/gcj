
// DO NOT EDIT THIS FILE - it is machine generated -*- c++ -*-

#ifndef __gnu_xml_libxmlj_transform_ErrorListenerErrorHandler__
#define __gnu_xml_libxmlj_transform_ErrorListenerErrorHandler__

#pragma interface

#include <java/lang/Object.h>
extern "Java"
{
  namespace gnu
  {
    namespace xml
    {
      namespace libxmlj
      {
        namespace transform
        {
            class ErrorListenerErrorHandler;
        }
      }
    }
  }
  namespace javax
  {
    namespace xml
    {
      namespace transform
      {
          class ErrorListener;
          class TransformerException;
      }
    }
  }
  namespace org
  {
    namespace xml
    {
      namespace sax
      {
          class SAXException;
          class SAXParseException;
      }
    }
  }
}

class gnu::xml::libxmlj::transform::ErrorListenerErrorHandler : public ::java::lang::Object
{

public: // actually package-private
  ErrorListenerErrorHandler(::javax::xml::transform::ErrorListener *);
public:
  virtual void warning(::org::xml::sax::SAXParseException *);
  virtual void error(::org::xml::sax::SAXParseException *);
  virtual void fatalError(::org::xml::sax::SAXParseException *);
private:
  ::org::xml::sax::SAXException * getSAXException(::javax::xml::transform::TransformerException *);
  ::javax::xml::transform::ErrorListener * __attribute__((aligned(__alignof__( ::java::lang::Object)))) listener;
public:
  static ::java::lang::Class class$;
};

#endif // __gnu_xml_libxmlj_transform_ErrorListenerErrorHandler__
