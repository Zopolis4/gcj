
// DO NOT EDIT THIS FILE - it is machine generated -*- c++ -*-

#ifndef __gnu_java_security_x509_X509CRLEntry__
#define __gnu_java_security_x509_X509CRLEntry__

#pragma interface

#include <java/security/cert/X509CRLEntry.h>
#include <gcj/array.h>

extern "Java"
{
  namespace gnu
  {
    namespace java
    {
      namespace security
      {
          class OID;
        namespace der
        {
            class DERReader;
        }
        namespace x509
        {
            class X509CRLEntry;
          namespace ext
          {
              class Extension;
          }
        }
      }
    }
  }
  namespace java
  {
    namespace math
    {
        class BigInteger;
    }
  }
}

class gnu::java::security::x509::X509CRLEntry : public ::java::security::cert::X509CRLEntry
{

public: // actually package-private
  X509CRLEntry(jint, ::gnu::java::security::der::DERReader *);
public:
  virtual jboolean equals(::java::lang::Object *);
  virtual jint hashCode();
  virtual JArray< jbyte > * getEncoded();
  virtual ::java::math::BigInteger * getSerialNumber();
  virtual ::java::util::Date * getRevocationDate();
  virtual jboolean hasExtensions();
  virtual ::java::lang::String * toString();
  virtual jboolean hasUnsupportedCriticalExtension();
  virtual ::java::util::Set * getCriticalExtensionOIDs();
  virtual ::java::util::Set * getNonCriticalExtensionOIDs();
  virtual JArray< jbyte > * getExtensionValue(::java::lang::String *);
  virtual ::gnu::java::security::x509::ext::Extension * getExtension(::gnu::java::security::OID *);
  virtual ::java::util::Collection * getExtensions();
private:
  void parse(jint, ::gnu::java::security::der::DERReader *);
  static ::java::util::logging::Logger * log;
  JArray< jbyte > * __attribute__((aligned(__alignof__( ::java::security::cert::X509CRLEntry)))) encoded;
  ::java::math::BigInteger * serialNo;
  ::java::util::Date * revocationDate;
  ::java::util::HashMap * extensions;
public:
  static ::java::lang::Class class$;
};

#endif // __gnu_java_security_x509_X509CRLEntry__
