
// DO NOT EDIT THIS FILE - it is machine generated -*- c++ -*-

#ifndef __gnu_java_awt_font_opentype_CharGlyphMap$Type0__
#define __gnu_java_awt_font_opentype_CharGlyphMap$Type0__

#pragma interface

#include <gnu/java/awt/font/opentype/CharGlyphMap.h>
#include <gcj/array.h>

extern "Java"
{
  namespace gnu
  {
    namespace java
    {
      namespace awt
      {
        namespace font
        {
          namespace opentype
          {
              class CharGlyphMap$Type0;
          }
        }
      }
    }
  }
  namespace java
  {
    namespace nio
    {
        class ByteBuffer;
    }
  }
}

class gnu::java::awt::font::opentype::CharGlyphMap$Type0 : public ::gnu::java::awt::font::opentype::CharGlyphMap
{

public:
  CharGlyphMap$Type0(::java::nio::ByteBuffer *);
private:
  void readSingleTable(::java::nio::ByteBuffer *, jint, jint, jint);
public:
  jint getGlyph(jint);
private:
  static ::java::lang::String * getUpper129(jint, jint, jint);
  JArray< jchar > * __attribute__((aligned(__alignof__( ::gnu::java::awt::font::opentype::CharGlyphMap)))) glyphToUCS2;
  static ::java::lang::String * UPPER_ARABIC;
  static ::java::lang::String * UPPER_EAST_EUROPEAN_ROMAN;
  static ::java::lang::String * UPPER_CROATIAN;
  static ::java::lang::String * UPPER_CYRILLIC;
  static ::java::lang::String * UPPER_FARSI;
  static ::java::lang::String * UPPER_GREEK;
  static ::java::lang::String * UPPER_HEBREW;
  static ::java::lang::String * UPPER_ICELANDIC;
  static ::java::lang::String * UPPER_ROMAN;
  static ::java::lang::String * UPPER_ROMANIAN;
  static ::java::lang::String * UPPER_TURKISH;
public:
  static ::java::lang::Class class$;
};

#endif // __gnu_java_awt_font_opentype_CharGlyphMap$Type0__
