
// DO NOT EDIT THIS FILE - it is machine generated -*- c++ -*-

#ifndef __gnu_java_awt_font_OpenTypeFontPeer$XLineMetrics__
#define __gnu_java_awt_font_OpenTypeFontPeer$XLineMetrics__

#pragma interface

#include <java/awt/font/LineMetrics.h>
#include <gcj/array.h>

extern "Java"
{
  namespace gnu
  {
    namespace java
    {
      namespace awt
      {
        namespace font
        {
            class OpenTypeFontPeer;
            class OpenTypeFontPeer$XLineMetrics;
        }
      }
    }
  }
  namespace java
  {
    namespace awt
    {
        class Font;
      namespace font
      {
          class FontRenderContext;
          class GlyphVector;
      }
    }
    namespace text
    {
        class CharacterIterator;
    }
  }
}

class gnu::java::awt::font::OpenTypeFontPeer$XLineMetrics : public ::java::awt::font::LineMetrics
{

public: // actually package-private
  OpenTypeFontPeer$XLineMetrics(::gnu::java::awt::font::OpenTypeFontPeer *, ::java::awt::Font *, ::java::text::CharacterIterator *, jint, jint, ::java::awt::font::FontRenderContext *);
public:
  virtual jfloat getAscent();
  virtual jint getBaselineIndex();
  virtual JArray< jfloat > * getBaselineOffsets();
  virtual jfloat getDescent();
  virtual jfloat getHeight();
  virtual jfloat getLeading();
  virtual jint getNumChars();
  virtual jfloat getStrikethroughOffset();
  virtual jfloat getStrikethroughThickness();
  virtual jfloat getUnderlineOffset();
  virtual jfloat getUnderlineThickness();
private:
  ::java::awt::Font * __attribute__((aligned(__alignof__( ::java::awt::font::LineMetrics)))) font;
  ::java::awt::font::GlyphVector * glyphVector;
  ::java::awt::font::FontRenderContext * fontRenderContext;
public: // actually package-private
  ::gnu::java::awt::font::OpenTypeFontPeer * this$0;
public:
  static ::java::lang::Class class$;
};

#endif // __gnu_java_awt_font_OpenTypeFontPeer$XLineMetrics__
