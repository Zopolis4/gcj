
// DO NOT EDIT THIS FILE - it is machine generated -*- c++ -*-

#ifndef __gnu_java_awt_print_JavaPrinterGraphics__
#define __gnu_java_awt_print_JavaPrinterGraphics__

#pragma interface

#include <java/awt/Graphics.h>
#include <gcj/array.h>

extern "Java"
{
  namespace gnu
  {
    namespace java
    {
      namespace awt
      {
        namespace print
        {
            class JavaPrinterGraphics;
            class SpooledDocument;
        }
      }
    }
  }
  namespace java
  {
    namespace awt
    {
        class Color;
        class Font;
        class FontMetrics;
        class Graphics;
        class Image;
        class Rectangle;
        class Shape;
      namespace geom
      {
          class AffineTransform;
      }
      namespace image
      {
          class ImageObserver;
      }
      namespace print
      {
          class PageFormat;
          class Pageable;
          class Printable;
          class PrinterJob;
      }
    }
    namespace text
    {
        class AttributedCharacterIterator;
    }
  }
}

class gnu::java::awt::print::JavaPrinterGraphics : public ::java::awt::Graphics
{

public:
  JavaPrinterGraphics(::java::awt::print::PrinterJob *);
  virtual ::gnu::java::awt::print::SpooledDocument * spoolPostScript(::java::awt::print::Printable *, ::java::awt::print::PageFormat *, ::java::awt::print::Pageable *);
  virtual jint spoolPage(::java::io::PrintWriter *, ::java::awt::print::Printable *, ::java::awt::print::PageFormat *, jint);
private:
  void initImage(::java::awt::print::PageFormat *);
  void writePSHeader(::java::io::PrintWriter *);
  void writePage(::java::io::PrintWriter *, ::java::awt::print::PageFormat *);
  ::java::lang::String * colorTripleHex(jint);
  void concatCTM(::java::io::PrintWriter *, ::java::awt::geom::AffineTransform *);
public:
  virtual ::java::awt::print::PrinterJob * getPrinterJob();
  virtual void clearRect(jint, jint, jint, jint);
  virtual void clipRect(jint, jint, jint, jint);
  virtual void copyArea(jint, jint, jint, jint, jint, jint);
  virtual ::java::awt::Graphics * create();
  virtual void dispose();
  virtual void drawArc(jint, jint, jint, jint, jint, jint);
  virtual jboolean drawImage(::java::awt::Image *, jint, jint, ::java::awt::Color *, ::java::awt::image::ImageObserver *);
  virtual jboolean drawImage(::java::awt::Image *, jint, jint, ::java::awt::image::ImageObserver *);
  virtual jboolean drawImage(::java::awt::Image *, jint, jint, jint, jint, ::java::awt::Color *, ::java::awt::image::ImageObserver *);
  virtual jboolean drawImage(::java::awt::Image *, jint, jint, jint, jint, ::java::awt::image::ImageObserver *);
  virtual jboolean drawImage(::java::awt::Image *, jint, jint, jint, jint, jint, jint, jint, jint, ::java::awt::Color *, ::java::awt::image::ImageObserver *);
  virtual jboolean drawImage(::java::awt::Image *, jint, jint, jint, jint, jint, jint, jint, jint, ::java::awt::image::ImageObserver *);
  virtual void drawLine(jint, jint, jint, jint);
  virtual void drawOval(jint, jint, jint, jint);
  virtual void drawPolygon(JArray< jint > *, JArray< jint > *, jint);
  virtual void drawPolyline(JArray< jint > *, JArray< jint > *, jint);
  virtual void drawRoundRect(jint, jint, jint, jint, jint, jint);
  virtual void drawString(::java::text::AttributedCharacterIterator *, jint, jint);
  virtual void drawString(::java::lang::String *, jint, jint);
  virtual void fillArc(jint, jint, jint, jint, jint, jint);
  virtual void fillOval(jint, jint, jint, jint);
  virtual void fillPolygon(JArray< jint > *, JArray< jint > *, jint);
  virtual void fillRect(jint, jint, jint, jint);
  virtual void fillRoundRect(jint, jint, jint, jint, jint, jint);
  virtual ::java::awt::Shape * getClip();
  virtual ::java::awt::Rectangle * getClipBounds();
  virtual ::java::awt::Color * getColor();
  virtual ::java::awt::Font * getFont();
  virtual ::java::awt::FontMetrics * getFontMetrics(::java::awt::Font *);
  virtual void setClip(jint, jint, jint, jint);
  virtual void setClip(::java::awt::Shape *);
  virtual void setColor(::java::awt::Color *);
  virtual void setFont(::java::awt::Font *);
  virtual void setPaintMode();
  virtual void setXORMode(::java::awt::Color *);
  virtual void translate(jint, jint);
private:
  ::java::awt::Graphics * __attribute__((aligned(__alignof__( ::java::awt::Graphics)))) g;
  ::java::awt::print::PrinterJob * printerJob;
  static jdouble DPI;
  jint xSize;
  jint ySize;
  ::java::awt::Image * image;
public:
  static ::java::lang::Class class$;
};

#endif // __gnu_java_awt_print_JavaPrinterGraphics__
