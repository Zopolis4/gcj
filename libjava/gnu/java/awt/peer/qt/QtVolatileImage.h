
// DO NOT EDIT THIS FILE - it is machine generated -*- c++ -*-

#ifndef __gnu_java_awt_peer_qt_QtVolatileImage__
#define __gnu_java_awt_peer_qt_QtVolatileImage__

#pragma interface

#include <java/awt/image/VolatileImage.h>
#include <gcj/array.h>

extern "Java"
{
  namespace gnu
  {
    namespace java
    {
      namespace awt
      {
        namespace peer
        {
          namespace qt
          {
              class QMatrix;
              class QtGraphics;
              class QtImage;
              class QtImageGraphics;
              class QtVolatileImage;
          }
        }
      }
    }
  }
  namespace java
  {
    namespace awt
    {
        class Color;
        class Graphics;
        class Graphics2D;
        class GraphicsConfiguration;
        class Image;
        class ImageCapabilities;
      namespace image
      {
          class BufferedImage;
          class ColorModel;
          class ImageObserver;
          class ImageProducer;
      }
    }
  }
}

class gnu::java::awt::peer::qt::QtVolatileImage : public ::java::awt::image::VolatileImage
{

public:
  virtual void clear();
private:
  JArray< jint > * getPixels();
  void createImage();
  void freeImage();
public:
  virtual void blit(::gnu::java::awt::peer::qt::QtImage *);
  virtual void blit(::gnu::java::awt::peer::qt::QtImage *, jint, jint, jint, jint);
private:
  void createScaledImage(::gnu::java::awt::peer::qt::QtVolatileImage *, jint);
  void drawPixels(::gnu::java::awt::peer::qt::QtGraphics *, jint, jint, jint, jint, jint, jboolean);
  void drawPixelsScaled(::gnu::java::awt::peer::qt::QtGraphics *, jint, jint, jint, jint, jint, jint, jint, jboolean);
  void drawPixelsTransformed(::gnu::java::awt::peer::qt::QtGraphics *, ::gnu::java::awt::peer::qt::QMatrix *);
public: // actually package-private
  virtual void drawPixelsScaledFlipped(::gnu::java::awt::peer::qt::QtGraphics *, jint, jint, jint, jboolean, jboolean, jint, jint, jint, jint, jint, jint, jint, jint, jboolean);
public:
  QtVolatileImage(jint, jint);
private:
  QtVolatileImage(::gnu::java::awt::peer::qt::QtVolatileImage *, jint, jint, jint);
public:
  virtual void finalize();
  virtual void dispose();
  virtual jint getWidth(::java::awt::image::ImageObserver *);
  virtual jint getHeight(::java::awt::image::ImageObserver *);
  virtual ::java::lang::Object * getProperty(::java::lang::String *, ::java::awt::image::ImageObserver *);
  virtual ::java::awt::image::ImageProducer * getSource();
public: // actually package-private
  virtual void putPainter(::gnu::java::awt::peer::qt::QtImageGraphics *);
  virtual void removePainter(::gnu::java::awt::peer::qt::QtImageGraphics *);
public:
  virtual ::java::awt::Graphics * getGraphics();
  virtual ::java::awt::Image * getScaledInstance(jint, jint, jint);
  virtual void flush();
  virtual jint checkImage(::java::awt::image::ImageObserver *);
  virtual jboolean drawImage(::gnu::java::awt::peer::qt::QtGraphics *, ::gnu::java::awt::peer::qt::QMatrix *, ::java::awt::image::ImageObserver *);
  virtual jboolean drawImage(::gnu::java::awt::peer::qt::QtGraphics *, jint, jint, ::java::awt::Color *, ::java::awt::image::ImageObserver *);
  virtual jboolean drawImage(::gnu::java::awt::peer::qt::QtGraphics *, jint, jint, jint, jint, ::java::awt::Color *, ::java::awt::image::ImageObserver *);
  virtual jboolean drawImage(::gnu::java::awt::peer::qt::QtGraphics *, jint, jint, jint, jint, jint, jint, jint, jint, ::java::awt::Color *, ::java::awt::image::ImageObserver *);
  virtual void copyArea(jint, jint, jint, jint, jint, jint);
  virtual jboolean contentsLost();
  virtual ::java::awt::Graphics2D * createGraphics();
  virtual ::java::awt::ImageCapabilities * getCapabilities();
  virtual jint getHeight();
  virtual ::java::awt::image::BufferedImage * getSnapshot();
  virtual jint getWidth();
  virtual jint validate(::java::awt::GraphicsConfiguration *);
public: // actually package-private
  jint __attribute__((aligned(__alignof__( ::java::awt::image::VolatileImage)))) width;
  jint height;
  ::java::util::Hashtable * props;
  jlong nativeObject;
  static ::java::awt::image::ColorModel * nativeModel;
  ::java::util::WeakHashMap * painters;
  jboolean killFlag;
public:
  static ::java::lang::Class class$;
};

#endif // __gnu_java_awt_peer_qt_QtVolatileImage__
