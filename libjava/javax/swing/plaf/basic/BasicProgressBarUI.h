
// DO NOT EDIT THIS FILE - it is machine generated -*- c++ -*-

#ifndef __javax_swing_plaf_basic_BasicProgressBarUI__
#define __javax_swing_plaf_basic_BasicProgressBarUI__

#pragma interface

#include <javax/swing/plaf/ProgressBarUI.h>
extern "Java"
{
  namespace java
  {
    namespace awt
    {
        class Color;
        class Dimension;
        class Graphics;
        class Insets;
        class Point;
        class Rectangle;
      namespace event
      {
          class ComponentListener;
      }
    }
  }
  namespace javax
  {
    namespace swing
    {
        class JComponent;
        class JProgressBar;
        class Timer;
      namespace event
      {
          class AncestorListener;
          class ChangeListener;
      }
      namespace plaf
      {
          class ComponentUI;
        namespace basic
        {
            class BasicProgressBarUI;
            class BasicProgressBarUI$Animator;
            class BasicProgressBarUI$PropertyChangeHandler;
        }
      }
    }
  }
}

class javax::swing::plaf::basic::BasicProgressBarUI : public ::javax::swing::plaf::ProgressBarUI
{

public:
  BasicProgressBarUI();
  static ::javax::swing::plaf::ComponentUI * createUI(::javax::swing::JComponent *);
public: // actually protected
  virtual jint getAmountFull(::java::awt::Insets *, jint, jint);
  virtual jint getAnimationIndex();
  virtual ::java::awt::Rectangle * getBox(::java::awt::Rectangle *);
  virtual jint getCellLength();
  virtual jint getCellSpacing();
public:
  virtual ::java::awt::Dimension * getMaximumSize(::javax::swing::JComponent *);
  virtual ::java::awt::Dimension * getMinimumSize(::javax::swing::JComponent *);
public: // actually protected
  virtual ::java::awt::Dimension * getPreferredInnerHorizontal();
  virtual ::java::awt::Dimension * getPreferredInnerVertical();
public:
  virtual ::java::awt::Dimension * getPreferredSize(::javax::swing::JComponent *);
public: // actually protected
  virtual ::java::awt::Color * getSelectionBackground();
  virtual ::java::awt::Color * getSelectionForeground();
  virtual ::java::awt::Point * getStringPlacement(::java::awt::Graphics *, ::java::lang::String *, jint, jint, jint, jint);
  virtual void incrementAnimationIndex();
public:
  virtual void paint(::java::awt::Graphics *, ::javax::swing::JComponent *);
public: // actually protected
  virtual void paintDeterminate(::java::awt::Graphics *, ::javax::swing::JComponent *);
  virtual void paintIndeterminate(::java::awt::Graphics *, ::javax::swing::JComponent *);
  virtual void paintString(::java::awt::Graphics *, jint, jint, jint, jint, jint, ::java::awt::Insets *);
  virtual void setAnimationIndex(jint);
  virtual void setCellLength(jint);
  virtual void setCellSpacing(jint);
  virtual void startAnimationTimer();
  virtual void stopAnimationTimer();
  virtual void installDefaults();
  virtual void uninstallDefaults();
  virtual void installListeners();
  virtual void uninstallListeners();
public:
  virtual void installUI(::javax::swing::JComponent *);
  virtual void uninstallUI(::javax::swing::JComponent *);
public: // actually protected
  ::java::awt::Rectangle * __attribute__((aligned(__alignof__( ::javax::swing::plaf::ProgressBarUI)))) boxRect;
private:
  ::javax::swing::Timer * animationTimer;
  jint animationIndex;
  jint numFrames;
  ::javax::swing::plaf::basic::BasicProgressBarUI$Animator * animation;
  ::javax::swing::plaf::basic::BasicProgressBarUI$PropertyChangeHandler * propertyListener;
public: // actually protected
  ::javax::swing::event::ChangeListener * changeListener;
  ::javax::swing::JProgressBar * progressBar;
public: // actually package-private
  jdouble boxDependent;
  jint boxIndependent;
  jdouble incr;
private:
  jint cellLength;
  jint cellSpacing;
  ::java::awt::Color * selectionBackground;
  ::java::awt::Color * selectionForeground;
  ::javax::swing::event::AncestorListener * ancestorListener;
  ::java::awt::event::ComponentListener * componentListener;
public:
  static ::java::lang::Class class$;
};

#endif // __javax_swing_plaf_basic_BasicProgressBarUI__
