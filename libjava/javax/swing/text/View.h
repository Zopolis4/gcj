
// DO NOT EDIT THIS FILE - it is machine generated -*- c++ -*-

#ifndef __javax_swing_text_View__
#define __javax_swing_text_View__

#pragma interface

#include <java/lang/Object.h>
#include <gcj/array.h>

extern "Java"
{
  namespace java
  {
    namespace awt
    {
        class Container;
        class Graphics;
        class Shape;
    }
  }
  namespace javax
  {
    namespace swing
    {
      namespace event
      {
          class DocumentEvent;
          class DocumentEvent$ElementChange;
      }
      namespace text
      {
          class AttributeSet;
          class Document;
          class Element;
          class Position$Bias;
          class View;
          class ViewFactory;
      }
    }
  }
}

class javax::swing::text::View : public ::java::lang::Object
{

public:
  View(::javax::swing::text::Element *);
  virtual void paint(::java::awt::Graphics *, ::java::awt::Shape *) = 0;
  virtual void setParent(::javax::swing::text::View *);
  virtual ::javax::swing::text::View * getParent();
  virtual ::java::awt::Container * getContainer();
  virtual ::javax::swing::text::Document * getDocument();
  virtual ::javax::swing::text::Element * getElement();
  virtual jfloat getPreferredSpan(jint) = 0;
  virtual jint getResizeWeight(jint);
  virtual jfloat getMaximumSpan(jint);
  virtual jfloat getMinimumSpan(jint);
  virtual void setSize(jfloat, jfloat);
  virtual jfloat getAlignment(jint);
  virtual ::javax::swing::text::AttributeSet * getAttributes();
  virtual jboolean isVisible();
  virtual jint getViewCount();
  virtual ::javax::swing::text::View * getView(jint);
  virtual ::javax::swing::text::ViewFactory * getViewFactory();
  virtual void replace(jint, jint, JArray< ::javax::swing::text::View * > *);
  virtual void insert(jint, ::javax::swing::text::View *);
  virtual void append(::javax::swing::text::View *);
  virtual void removeAll();
  virtual void remove(jint);
  virtual ::javax::swing::text::View * createFragment(jint, jint);
  virtual jint getStartOffset();
  virtual jint getEndOffset();
  virtual ::java::awt::Shape * getChildAllocation(jint, ::java::awt::Shape *);
  virtual jint getViewIndex(jfloat, jfloat, ::java::awt::Shape *);
  virtual ::java::lang::String * getToolTipText(jfloat, jfloat, ::java::awt::Shape *);
  virtual ::java::awt::Graphics * getGraphics();
  virtual void preferenceChanged(::javax::swing::text::View *, jboolean, jboolean);
  virtual jint getBreakWeight(jint, jfloat, jfloat);
  virtual ::javax::swing::text::View * breakView(jint, jint, jfloat, jfloat);
  virtual jint getViewIndex(jint, ::javax::swing::text::Position$Bias *);
  virtual void insertUpdate(::javax::swing::event::DocumentEvent *, ::java::awt::Shape *, ::javax::swing::text::ViewFactory *);
  virtual void removeUpdate(::javax::swing::event::DocumentEvent *, ::java::awt::Shape *, ::javax::swing::text::ViewFactory *);
  virtual void changedUpdate(::javax::swing::event::DocumentEvent *, ::java::awt::Shape *, ::javax::swing::text::ViewFactory *);
public: // actually protected
  virtual jboolean updateChildren(::javax::swing::event::DocumentEvent$ElementChange *, ::javax::swing::event::DocumentEvent *, ::javax::swing::text::ViewFactory *);
  virtual void forwardUpdate(::javax::swing::event::DocumentEvent$ElementChange *, ::javax::swing::event::DocumentEvent *, ::java::awt::Shape *, ::javax::swing::text::ViewFactory *);
  virtual void forwardUpdateToView(::javax::swing::text::View *, ::javax::swing::event::DocumentEvent *, ::java::awt::Shape *, ::javax::swing::text::ViewFactory *);
  virtual void updateLayout(::javax::swing::event::DocumentEvent$ElementChange *, ::javax::swing::event::DocumentEvent *, ::java::awt::Shape *);
public:
  virtual ::java::awt::Shape * modelToView(jint, ::java::awt::Shape *, ::javax::swing::text::Position$Bias *) = 0;
  virtual ::java::awt::Shape * modelToView(jint, ::javax::swing::text::Position$Bias *, jint, ::javax::swing::text::Position$Bias *, ::java::awt::Shape *);
  virtual ::java::awt::Shape * modelToView(jint, ::java::awt::Shape *);
  virtual jint viewToModel(jfloat, jfloat, ::java::awt::Shape *, JArray< ::javax::swing::text::Position$Bias * > *) = 0;
  virtual jint viewToModel(jfloat, jfloat, ::java::awt::Shape *);
public: // actually protected
  virtual void dump();
public: // actually package-private
  virtual void dump(jint);
public:
  virtual jint getNextVisualPositionFrom(jint, ::javax::swing::text::Position$Bias *, ::java::awt::Shape *, jint, JArray< ::javax::swing::text::Position$Bias * > *);
  static const jint BadBreakWeight = 0;
  static const jint ExcellentBreakWeight = 2000;
  static const jint ForcedBreakWeight = 3000;
  static const jint GoodBreakWeight = 1000;
  static const jint X_AXIS = 0;
  static const jint Y_AXIS = 1;
private:
  ::javax::swing::text::Element * __attribute__((aligned(__alignof__( ::java::lang::Object)))) elt;
  ::javax::swing::text::View * parent;
public:
  static ::java::lang::Class class$;
};

#endif // __javax_swing_text_View__
