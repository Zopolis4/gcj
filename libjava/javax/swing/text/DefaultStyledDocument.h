
// DO NOT EDIT THIS FILE - it is machine generated -*- c++ -*-

#ifndef __javax_swing_text_DefaultStyledDocument__
#define __javax_swing_text_DefaultStyledDocument__

#pragma interface

#include <javax/swing/text/AbstractDocument.h>
#include <gcj/array.h>

extern "Java"
{
  namespace java
  {
    namespace awt
    {
        class Color;
        class Font;
    }
  }
  namespace javax
  {
    namespace swing
    {
      namespace text
      {
          class AbstractDocument$AbstractElement;
          class AbstractDocument$Content;
          class AbstractDocument$DefaultDocumentEvent;
          class AttributeSet;
          class DefaultStyledDocument;
          class DefaultStyledDocument$ElementBuffer;
          class DefaultStyledDocument$ElementSpec;
          class DefaultStyledDocument$StyleChangeListener;
          class Element;
          class Style;
          class StyleContext;
      }
    }
  }
}

class javax::swing::text::DefaultStyledDocument : public ::javax::swing::text::AbstractDocument
{

public:
  DefaultStyledDocument();
  DefaultStyledDocument(::javax::swing::text::StyleContext *);
  DefaultStyledDocument(::javax::swing::text::AbstractDocument$Content *, ::javax::swing::text::StyleContext *);
  virtual ::javax::swing::text::Style * addStyle(::java::lang::String *, ::javax::swing::text::Style *);
public: // actually protected
  virtual ::javax::swing::text::AbstractDocument$AbstractElement * createDefaultRoot();
public:
  virtual ::javax::swing::text::Element * getCharacterElement(jint);
  virtual ::java::awt::Color * getBackground(::javax::swing::text::AttributeSet *);
  virtual ::javax::swing::text::Element * getDefaultRootElement();
  virtual ::java::awt::Font * getFont(::javax::swing::text::AttributeSet *);
  virtual ::java::awt::Color * getForeground(::javax::swing::text::AttributeSet *);
  virtual ::javax::swing::text::Style * getLogicalStyle(jint);
  virtual ::javax::swing::text::Element * getParagraphElement(jint);
  virtual ::javax::swing::text::Style * getStyle(::java::lang::String *);
  virtual void removeStyle(::java::lang::String *);
  virtual void setCharacterAttributes(jint, jint, ::javax::swing::text::AttributeSet *, jboolean);
  virtual void setLogicalStyle(jint, ::javax::swing::text::Style *);
  virtual void setParagraphAttributes(jint, jint, ::javax::swing::text::AttributeSet *, jboolean);
public: // actually protected
  virtual void insertUpdate(::javax::swing::text::AbstractDocument$DefaultDocumentEvent *, ::javax::swing::text::AttributeSet *);
private:
  jshort insertAfterNewline(::javax::swing::text::Element *, ::javax::swing::text::Element *, ::javax::swing::text::AttributeSet *, ::java::util::ArrayList *, jint, jint);
public: // actually package-private
  virtual jshort handleInsertAfterNewline(::java::util::Vector *, jint, jint, ::javax::swing::text::Element *, ::javax::swing::text::Element *, ::javax::swing::text::AttributeSet *);
public: // actually protected
  virtual void removeUpdate(::javax::swing::text::AbstractDocument$DefaultDocumentEvent *);
public:
  virtual ::java::util::Enumeration * getStyleNames();
public: // actually protected
  virtual void styleChanged(::javax::swing::text::Style *);
  virtual void insert(jint, JArray< ::javax::swing::text::DefaultStyledDocument$ElementSpec * > *);
  virtual void create(JArray< ::javax::swing::text::DefaultStyledDocument$ElementSpec * > *);
private:
  static const jlong serialVersionUID = 940485415728614849LL;
public:
  static const jint BUFFER_SIZE_DEFAULT = 4096;
public: // actually protected
  ::javax::swing::text::DefaultStyledDocument$ElementBuffer * __attribute__((aligned(__alignof__( ::javax::swing::text::AbstractDocument)))) buffer;
private:
  ::javax::swing::text::DefaultStyledDocument$StyleChangeListener * styleChangeListener;
public: // actually package-private
  static jboolean $assertionsDisabled;
public:
  static ::java::lang::Class class$;
};

#endif // __javax_swing_text_DefaultStyledDocument__
