
// DO NOT EDIT THIS FILE - it is machine generated -*- c++ -*-

#ifndef __javax_swing_text_html_CSSBorder__
#define __javax_swing_text_html_CSSBorder__

#pragma interface

#include <java/lang/Object.h>
extern "Java"
{
  namespace java
  {
    namespace awt
    {
        class Color;
        class Component;
        class Graphics;
        class Insets;
    }
  }
  namespace javax
  {
    namespace swing
    {
      namespace text
      {
          class AttributeSet;
        namespace html
        {
            class CSS$Attribute;
            class CSSBorder;
            class StyleSheet;
        }
      }
    }
  }
}

class javax::swing::text::html::CSSBorder : public ::java::lang::Object
{

public: // actually package-private
  CSSBorder(::javax::swing::text::AttributeSet *, ::javax::swing::text::html::StyleSheet *);
private:
  jint getBorderStyle(::javax::swing::text::AttributeSet *, ::javax::swing::text::html::CSS$Attribute *);
  ::java::awt::Color * getBorderColor(::javax::swing::text::AttributeSet *, ::javax::swing::text::html::CSS$Attribute *);
  jint getBorderWidth(::javax::swing::text::AttributeSet *, ::javax::swing::text::html::CSS$Attribute *, ::javax::swing::text::html::StyleSheet *);
public:
  virtual ::java::awt::Insets * getBorderInsets(::java::awt::Component *);
  virtual jboolean isBorderOpaque();
  virtual void paintBorder(::java::awt::Component *, ::java::awt::Graphics *, jint, jint, jint, jint);
private:
  void paintBorderLine(::java::awt::Graphics *, jint, jint, jint, jint, jint, jint, ::java::awt::Color *, jboolean);
  void paintDottedLine(::java::awt::Graphics *, jint, jint, jint, jint, jint, ::java::awt::Color *, jboolean);
  void paintDashedLine(::java::awt::Graphics *, jint, jint, jint, jint, jint, ::java::awt::Color *, jboolean);
  void paintSolidLine(::java::awt::Graphics *, jint, jint, jint, jint, jint, ::java::awt::Color *, jboolean);
  void paintDoubleLine(::java::awt::Graphics *, jint, jint, jint, jint, jint, ::java::awt::Color *, jboolean);
  void paintGrooveLine(::java::awt::Graphics *, jint, jint, jint, jint, jint, ::java::awt::Color *, jboolean);
  void paintRidgeLine(::java::awt::Graphics *, jint, jint, jint, jint, jint, ::java::awt::Color *, jboolean);
  void paintOutsetLine(::java::awt::Graphics *, jint, jint, jint, jint, jint, ::java::awt::Color *, jboolean);
  void paintInsetLine(::java::awt::Graphics *, jint, jint, jint, jint, jint, ::java::awt::Color *, jboolean);
  static const jint STYLE_NOT_SET = -1;
  static const jint STYLE_NONE = 0;
  static const jint STYLE_HIDDEN = 1;
  static const jint STYLE_DOTTED = 2;
  static const jint STYLE_DASHED = 3;
  static const jint STYLE_SOLID = 4;
  static const jint STYLE_DOUBLE = 5;
  static const jint STYLE_GROOVE = 6;
  static const jint STYLE_RIDGE = 7;
  static const jint STYLE_INSET = 8;
  static const jint STYLE_OUTSET = 9;
  jint __attribute__((aligned(__alignof__( ::java::lang::Object)))) left;
  jint right;
  jint top;
  jint bottom;
  jint leftStyle;
  jint rightStyle;
  jint topStyle;
  ::java::awt::Color * topColor;
  ::java::awt::Color * bottomColor;
  ::java::awt::Color * leftColor;
  ::java::awt::Color * rightColor;
  jint bottomStyle;
public:
  static ::java::lang::Class class$;
};

#endif // __javax_swing_text_html_CSSBorder__
