
// DO NOT EDIT THIS FILE - it is machine generated -*- c++ -*-

#ifndef __javax_swing_text_html_MinimalHTMLWriter__
#define __javax_swing_text_html_MinimalHTMLWriter__

#pragma interface

#include <javax/swing/text/AbstractWriter.h>
extern "Java"
{
  namespace java
  {
    namespace awt
    {
        class Color;
    }
  }
  namespace javax
  {
    namespace swing
    {
      namespace text
      {
          class AttributeSet;
          class Element;
          class Style;
          class StyledDocument;
        namespace html
        {
            class MinimalHTMLWriter;
        }
      }
    }
  }
}

class javax::swing::text::html::MinimalHTMLWriter : public ::javax::swing::text::AbstractWriter
{

public:
  MinimalHTMLWriter(::java::io::Writer *, ::javax::swing::text::StyledDocument *);
  MinimalHTMLWriter(::java::io::Writer *, ::javax::swing::text::StyledDocument *, jint, jint);
public: // actually protected
  virtual void startFontTag(::java::lang::String *);
  virtual jboolean inFontTag();
  virtual void endFontTag();
public:
  virtual void write();
public: // actually protected
  virtual void writeStartTag(::java::lang::String *);
  virtual void writeEndTag(::java::lang::String *);
  virtual void writeHeader();
  virtual void writeStartParagraph(::javax::swing::text::Element *);
  virtual void writeEndParagraph();
  virtual void writeBody();
  virtual void text(::javax::swing::text::Element *);
  virtual void writeHTMLTags(::javax::swing::text::AttributeSet *);
  virtual jboolean isText(::javax::swing::text::Element *);
  virtual void writeContent(::javax::swing::text::Element *, jboolean);
  virtual void writeLeaf(::javax::swing::text::Element *);
  virtual void writeNonHTMLAttributes(::javax::swing::text::AttributeSet *);
  virtual void writeStyles();
  virtual void writeAttributes(::javax::swing::text::AttributeSet *);
  virtual void writeComponent(::javax::swing::text::Element *);
  virtual void writeImage(::javax::swing::text::Element *);
private:
  ::java::lang::String * getAttribute(::java::lang::String *, ::java::lang::Object *);
  ::java::lang::String * getColor(::java::awt::Color *);
  void endOpenTags();
  void writeStyle(::javax::swing::text::Style *);
  jboolean hasText(::javax::swing::text::Element *);
  ::javax::swing::text::StyledDocument * __attribute__((aligned(__alignof__( ::javax::swing::text::AbstractWriter)))) doc;
  ::java::util::Deque * tagStack;
  jboolean inFontTag__;
public:
  static ::java::lang::Class class$;
};

#endif // __javax_swing_text_html_MinimalHTMLWriter__
