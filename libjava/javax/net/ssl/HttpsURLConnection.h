
// DO NOT EDIT THIS FILE - it is machine generated -*- c++ -*-

#ifndef __javax_net_ssl_HttpsURLConnection__
#define __javax_net_ssl_HttpsURLConnection__

#pragma interface

#include <java/net/HttpURLConnection.h>
#include <gcj/array.h>

extern "Java"
{
  namespace java
  {
    namespace net
    {
        class URL;
    }
    namespace security
    {
        class Principal;
      namespace cert
      {
          class Certificate;
      }
    }
  }
  namespace javax
  {
    namespace net
    {
      namespace ssl
      {
          class HostnameVerifier;
          class HttpsURLConnection;
          class SSLSocketFactory;
      }
    }
  }
}

class javax::net::ssl::HttpsURLConnection : public ::java::net::HttpURLConnection
{

public: // actually protected
  HttpsURLConnection(::java::net::URL *);
public:
  static ::javax::net::ssl::HostnameVerifier * getDefaultHostnameVerifier();
  static void setDefaultHostnameVerifier(::javax::net::ssl::HostnameVerifier *);
  static ::javax::net::ssl::SSLSocketFactory * getDefaultSSLSocketFactory();
  static void setDefaultSSLSocketFactory(::javax::net::ssl::SSLSocketFactory *);
  virtual ::javax::net::ssl::HostnameVerifier * getHostnameVerifier();
  virtual void setHostnameVerifier(::javax::net::ssl::HostnameVerifier *);
  virtual ::javax::net::ssl::SSLSocketFactory * getSSLSocketFactory();
  virtual void setSSLSocketFactory(::javax::net::ssl::SSLSocketFactory *);
  virtual ::java::security::Principal * getLocalPrincipal();
  virtual ::java::security::Principal * getPeerPrincipal();
  virtual ::java::lang::String * getCipherSuite() = 0;
  virtual JArray< ::java::security::cert::Certificate * > * getLocalCertificates() = 0;
  virtual JArray< ::java::security::cert::Certificate * > * getServerCertificates() = 0;
private:
  static ::javax::net::ssl::HostnameVerifier * defaultVerifier;
  static ::javax::net::ssl::SSLSocketFactory * defaultFactory;
public: // actually protected
  ::javax::net::ssl::HostnameVerifier * __attribute__((aligned(__alignof__( ::java::net::HttpURLConnection)))) hostnameVerifier;
private:
  ::javax::net::ssl::SSLSocketFactory * factory;
public:
  static ::java::lang::Class class$;
};

#endif // __javax_net_ssl_HttpsURLConnection__
