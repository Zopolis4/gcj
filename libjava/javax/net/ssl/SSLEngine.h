
// DO NOT EDIT THIS FILE - it is machine generated -*- c++ -*-

#ifndef __javax_net_ssl_SSLEngine__
#define __javax_net_ssl_SSLEngine__

#pragma interface

#include <java/lang/Object.h>
#include <gcj/array.h>

extern "Java"
{
  namespace java
  {
    namespace nio
    {
        class ByteBuffer;
    }
  }
  namespace javax
  {
    namespace net
    {
      namespace ssl
      {
          class SSLEngine;
          class SSLEngineResult;
          class SSLEngineResult$HandshakeStatus;
          class SSLSession;
      }
    }
  }
}

class javax::net::ssl::SSLEngine : public ::java::lang::Object
{

public: // actually protected
  SSLEngine();
  SSLEngine(::java::lang::String *, jint);
public:
  virtual void beginHandshake() = 0;
  virtual void closeInbound() = 0;
  virtual void closeOutbound() = 0;
  virtual ::java::lang::Runnable * getDelegatedTask() = 0;
  virtual ::java::lang::String * getPeerHost();
  virtual jint getPeerPort();
  virtual JArray< ::java::lang::String * > * getEnabledCipherSuites() = 0;
  virtual JArray< ::java::lang::String * > * getEnabledProtocols() = 0;
  virtual jboolean getEnableSessionCreation() = 0;
  virtual ::javax::net::ssl::SSLEngineResult$HandshakeStatus * getHandshakeStatus() = 0;
  virtual jboolean getNeedClientAuth() = 0;
  virtual ::javax::net::ssl::SSLSession * getSession() = 0;
  virtual JArray< ::java::lang::String * > * getSupportedCipherSuites() = 0;
  virtual JArray< ::java::lang::String * > * getSupportedProtocols() = 0;
  virtual jboolean getUseClientMode() = 0;
  virtual jboolean getWantClientAuth() = 0;
  virtual jboolean isInboundDone() = 0;
  virtual jboolean isOutboundDone() = 0;
  virtual void setEnabledCipherSuites(JArray< ::java::lang::String * > *) = 0;
  virtual void setEnabledProtocols(JArray< ::java::lang::String * > *) = 0;
  virtual void setEnableSessionCreation(jboolean) = 0;
  virtual void setUseClientMode(jboolean) = 0;
  virtual void setNeedClientAuth(jboolean) = 0;
  virtual void setWantClientAuth(jboolean) = 0;
  virtual ::javax::net::ssl::SSLEngineResult * unwrap(::java::nio::ByteBuffer *, ::java::nio::ByteBuffer *);
  virtual ::javax::net::ssl::SSLEngineResult * unwrap(::java::nio::ByteBuffer *, JArray< ::java::nio::ByteBuffer * > *);
  virtual ::javax::net::ssl::SSLEngineResult * unwrap(::java::nio::ByteBuffer *, JArray< ::java::nio::ByteBuffer * > *, jint, jint) = 0;
  virtual ::javax::net::ssl::SSLEngineResult * wrap(::java::nio::ByteBuffer *, ::java::nio::ByteBuffer *);
  virtual ::javax::net::ssl::SSLEngineResult * wrap(JArray< ::java::nio::ByteBuffer * > *, ::java::nio::ByteBuffer *);
  virtual ::javax::net::ssl::SSLEngineResult * wrap(JArray< ::java::nio::ByteBuffer * > *, jint, jint, ::java::nio::ByteBuffer *) = 0;
private:
  ::java::lang::String * __attribute__((aligned(__alignof__( ::java::lang::Object)))) peerHost;
  jint peerPort;
public:
  static ::java::lang::Class class$;
};

#endif // __javax_net_ssl_SSLEngine__
