
// DO NOT EDIT THIS FILE - it is machine generated -*- c++ -*-

#ifndef __javax_crypto_ExemptionMechanism__
#define __javax_crypto_ExemptionMechanism__

#pragma interface

#include <java/lang/Object.h>
#include <gcj/array.h>

extern "Java"
{
  namespace java
  {
    namespace security
    {
        class AlgorithmParameters;
        class Key;
        class Provider;
      namespace spec
      {
          class AlgorithmParameterSpec;
      }
    }
  }
  namespace javax
  {
    namespace crypto
    {
        class ExemptionMechanism;
        class ExemptionMechanismSpi;
    }
  }
}

class javax::crypto::ExemptionMechanism : public ::java::lang::Object
{

public: // actually protected
  ExemptionMechanism(::javax::crypto::ExemptionMechanismSpi *, ::java::security::Provider *, ::java::lang::String *);
public:
  static ::javax::crypto::ExemptionMechanism * getInstance(::java::lang::String *);
  static ::javax::crypto::ExemptionMechanism * getInstance(::java::lang::String *, ::java::lang::String *);
  static ::javax::crypto::ExemptionMechanism * getInstance(::java::lang::String *, ::java::security::Provider *);
  virtual JArray< jbyte > * genExemptionBlob();
  virtual jint genExemptionBlob(JArray< jbyte > *);
  virtual jint genExemptionBlob(JArray< jbyte > *, jint);
  virtual ::java::lang::String * getName();
  virtual jint getOutputSize(jint);
  virtual ::java::security::Provider * getProvider();
  virtual void init(::java::security::Key *);
  virtual void init(::java::security::Key *, ::java::security::AlgorithmParameters *);
  virtual void init(::java::security::Key *, ::java::security::spec::AlgorithmParameterSpec *);
  virtual jboolean isCryptoAllowed(::java::security::Key *);
public: // actually protected
  virtual void finalize();
private:
  static ::java::lang::String * SERVICE;
  ::javax::crypto::ExemptionMechanismSpi * __attribute__((aligned(__alignof__( ::java::lang::Object)))) emSpi;
  ::java::security::Provider * provider;
  ::java::lang::String * mechanism;
  jboolean virgin;
public:
  static ::java::lang::Class class$;
};

#endif // __javax_crypto_ExemptionMechanism__
