
// DO NOT EDIT THIS FILE - it is machine generated -*- c++ -*-

#ifndef __javax_sound_midi_MidiSystem__
#define __javax_sound_midi_MidiSystem__

#pragma interface

#include <java/lang/Object.h>
#include <gcj/array.h>

extern "Java"
{
  namespace java
  {
    namespace net
    {
        class URL;
    }
  }
  namespace javax
  {
    namespace sound
    {
      namespace midi
      {
          class MidiDevice;
          class MidiDevice$Info;
          class MidiFileFormat;
          class MidiSystem;
          class Receiver;
          class Sequence;
          class Sequencer;
          class Soundbank;
          class Synthesizer;
          class Transmitter;
      }
    }
  }
}

class javax::sound::midi::MidiSystem : public ::java::lang::Object
{

  MidiSystem();
public:
  static JArray< ::javax::sound::midi::MidiDevice$Info * > * getMidiDeviceInfo();
  static ::javax::sound::midi::MidiDevice * getMidiDevice(::javax::sound::midi::MidiDevice$Info *);
  static ::javax::sound::midi::Receiver * getReceiver();
  static ::javax::sound::midi::Transmitter * getTransmitter();
  static ::javax::sound::midi::Synthesizer * getSynthesizer();
  static ::javax::sound::midi::Sequencer * getSequencer();
  static ::javax::sound::midi::Soundbank * getSoundbank(::java::io::InputStream *);
  static ::javax::sound::midi::Soundbank * getSoundbank(::java::net::URL *);
  static ::javax::sound::midi::Soundbank * getSoundbank(::java::io::File *);
  static ::javax::sound::midi::MidiFileFormat * getMidiFileFormat(::java::io::InputStream *);
  static ::javax::sound::midi::MidiFileFormat * getMidiFileFormat(::java::net::URL *);
  static ::javax::sound::midi::MidiFileFormat * getMidiFileFormat(::java::io::File *);
  static ::javax::sound::midi::Sequence * getSequence(::java::io::InputStream *);
  static ::javax::sound::midi::Sequence * getSequence(::java::net::URL *);
  static ::javax::sound::midi::Sequence * getSequence(::java::io::File *);
  static JArray< jint > * getMidiFileTypes();
  static jboolean isFileTypeSupported(jint);
  static JArray< jint > * getMidiFileTypes(::javax::sound::midi::Sequence *);
  static jboolean isFileTypeSupported(jint, ::javax::sound::midi::Sequence *);
  static jint write(::javax::sound::midi::Sequence *, jint, ::java::io::OutputStream *);
  static jint write(::javax::sound::midi::Sequence *, jint, ::java::io::File *);
  static ::java::lang::Class class$;
};

#endif // __javax_sound_midi_MidiSystem__
