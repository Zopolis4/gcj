
// DO NOT EDIT THIS FILE - it is machine generated -*- c++ -*-

#ifndef __javax_sound_sampled_AudioInputStream__
#define __javax_sound_sampled_AudioInputStream__

#pragma interface

#include <java/io/InputStream.h>
#include <gcj/array.h>

extern "Java"
{
  namespace javax
  {
    namespace sound
    {
      namespace sampled
      {
          class AudioFormat;
          class AudioInputStream;
          class TargetDataLine;
      }
    }
  }
}

class javax::sound::sampled::AudioInputStream : public ::java::io::InputStream
{

public:
  AudioInputStream(::java::io::InputStream *, ::javax::sound::sampled::AudioFormat *, jlong);
  AudioInputStream(::javax::sound::sampled::TargetDataLine *);
  virtual jint available();
  virtual void close();
  virtual ::javax::sound::sampled::AudioFormat * getFormat();
  virtual jlong getFrameLength();
  virtual void mark(jint);
  virtual jboolean markSupported();
  virtual jint read();
  virtual jint read(JArray< jbyte > *);
  virtual jint read(JArray< jbyte > *, jint, jint);
  virtual void reset();
  virtual jlong skip(jlong);
public: // actually protected
  ::javax::sound::sampled::AudioFormat * __attribute__((aligned(__alignof__( ::java::io::InputStream)))) format;
  jlong frameLength;
  jlong framePos;
  jint frameSize;
private:
  ::java::io::InputStream * input;
  jlong markedFramePos;
public:
  static ::java::lang::Class class$;
};

#endif // __javax_sound_sampled_AudioInputStream__
