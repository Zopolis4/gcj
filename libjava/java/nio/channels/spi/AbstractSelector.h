
// DO NOT EDIT THIS FILE - it is machine generated -*- c++ -*-

#ifndef __java_nio_channels_spi_AbstractSelector__
#define __java_nio_channels_spi_AbstractSelector__

#pragma interface

#include <java/nio/channels/Selector.h>
extern "Java"
{
  namespace java
  {
    namespace nio
    {
      namespace channels
      {
          class SelectionKey;
        namespace spi
        {
            class AbstractSelectableChannel;
            class AbstractSelectionKey;
            class AbstractSelector;
            class SelectorProvider;
        }
      }
    }
  }
}

class java::nio::channels::spi::AbstractSelector : public ::java::nio::channels::Selector
{

public: // actually protected
  AbstractSelector(::java::nio::channels::spi::SelectorProvider *);
public:
  virtual void close();
  virtual jboolean isOpen();
public: // actually protected
  virtual void begin();
  virtual void end();
public:
  virtual ::java::nio::channels::spi::SelectorProvider * provider();
public: // actually protected
  virtual ::java::util::Set * cancelledKeys();
public: // actually package-private
  virtual void cancelKey(::java::nio::channels::spi::AbstractSelectionKey *);
public: // actually protected
  virtual void implCloseSelector() = 0;
  virtual ::java::nio::channels::SelectionKey * register$(::java::nio::channels::spi::AbstractSelectableChannel *, jint, ::java::lang::Object *) = 0;
  virtual void deregister(::java::nio::channels::spi::AbstractSelectionKey *);
private:
  jboolean __attribute__((aligned(__alignof__( ::java::nio::channels::Selector)))) closed;
  ::java::nio::channels::spi::SelectorProvider * provider__;
  ::java::util::HashSet * cancelledKeys__;
public:
  static ::java::lang::Class class$;
};

#endif // __java_nio_channels_spi_AbstractSelector__
