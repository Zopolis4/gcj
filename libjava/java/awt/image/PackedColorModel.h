
// DO NOT EDIT THIS FILE - it is machine generated -*- c++ -*-

#ifndef __java_awt_image_PackedColorModel__
#define __java_awt_image_PackedColorModel__

#pragma interface

#include <java/awt/image/ColorModel.h>
#include <gcj/array.h>

extern "Java"
{
  namespace java
  {
    namespace awt
    {
      namespace color
      {
          class ColorSpace;
      }
      namespace image
      {
          class PackedColorModel;
          class SampleModel;
          class WritableRaster;
      }
    }
  }
}

class java::awt::image::PackedColorModel : public ::java::awt::image::ColorModel
{

public:
  PackedColorModel(::java::awt::color::ColorSpace *, jint, JArray< jint > *, jint, jboolean, jint, jint);
private:
  static JArray< jint > * calcBitsPerComponent(JArray< jint > *, jint);
  void initMasks(JArray< jint > *, jint);
public:
  PackedColorModel(::java::awt::color::ColorSpace *, jint, jint, jint, jint, jint, jboolean, jint, jint);
private:
  static JArray< jint > * makeColorMaskArray(jint, jint, jint);
public:
  virtual jint getMask(jint);
  virtual JArray< jint > * getMasks();
  virtual ::java::awt::image::SampleModel * createCompatibleSampleModel(jint, jint);
  virtual jboolean isCompatibleSampleModel(::java::awt::image::SampleModel *);
  virtual ::java::awt::image::WritableRaster * getAlphaRaster(::java::awt::image::WritableRaster *);
  virtual jboolean equals(::java::lang::Object *);
private:
  JArray< jint > * __attribute__((aligned(__alignof__( ::java::awt::image::ColorModel)))) masks;
public: // actually package-private
  JArray< jint > * shifts;
public:
  static ::java::lang::Class class$;
};

#endif // __java_awt_image_PackedColorModel__
