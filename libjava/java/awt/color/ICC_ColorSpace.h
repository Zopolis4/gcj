
// DO NOT EDIT THIS FILE - it is machine generated -*- c++ -*-

#ifndef __java_awt_color_ICC_ColorSpace__
#define __java_awt_color_ICC_ColorSpace__

#pragma interface

#include <java/awt/color/ColorSpace.h>
#include <gcj/array.h>

extern "Java"
{
  namespace gnu
  {
    namespace java
    {
      namespace awt
      {
        namespace color
        {
            class ColorSpaceConverter;
        }
      }
    }
  }
  namespace java
  {
    namespace awt
    {
      namespace color
      {
          class ICC_ColorSpace;
          class ICC_Profile;
      }
    }
  }
}

class java::awt::color::ICC_ColorSpace : public ::java::awt::color::ColorSpace
{

public:
  ICC_ColorSpace(::java::awt::color::ICC_Profile *);
  virtual ::java::awt::color::ICC_Profile * getProfile();
  virtual JArray< jfloat > * toRGB(JArray< jfloat > *);
  virtual JArray< jfloat > * fromRGB(JArray< jfloat > *);
  virtual JArray< jfloat > * toCIEXYZ(JArray< jfloat > *);
  virtual JArray< jfloat > * fromCIEXYZ(JArray< jfloat > *);
  virtual jboolean isCS_sRGB();
  virtual jfloat getMinValue(jint);
  virtual jfloat getMaxValue(jint);
private:
  ::gnu::java::awt::color::ColorSpaceConverter * getConverter(::java::awt::color::ICC_Profile *);
  void makeArrays();
  void readObject(::java::io::ObjectInputStream *);
  static const jlong serialVersionUID = 3455889114070431483LL;
  ::java::awt::color::ICC_Profile * __attribute__((aligned(__alignof__( ::java::awt::color::ColorSpace)))) thisProfile;
  JArray< jfloat > * minVal;
  JArray< jfloat > * maxVal;
  JArray< jfloat > * diffMinMax;
  JArray< jfloat > * invDiffMinMax;
  jboolean needScaleInit;
  jint type;
  jint nComponents;
  ::gnu::java::awt::color::ColorSpaceConverter * converter;
public:
  static ::java::lang::Class class$;
};

#endif // __java_awt_color_ICC_ColorSpace__
