
// DO NOT EDIT THIS FILE - it is machine generated -*- c++ -*-

#ifndef __java_awt_geom_Arc2D__
#define __java_awt_geom_Arc2D__

#pragma interface

#include <java/awt/geom/RectangularShape.h>
extern "Java"
{
  namespace java
  {
    namespace awt
    {
      namespace geom
      {
          class AffineTransform;
          class Arc2D;
          class Dimension2D;
          class PathIterator;
          class Point2D;
          class Rectangle2D;
      }
    }
  }
}

class java::awt::geom::Arc2D : public ::java::awt::geom::RectangularShape
{

public: // actually protected
  Arc2D(jint);
public:
  virtual jdouble getAngleStart() = 0;
  virtual jdouble getAngleExtent() = 0;
  virtual jint getArcType();
  virtual ::java::awt::geom::Point2D * getStartPoint();
  virtual ::java::awt::geom::Point2D * getEndPoint();
  virtual void setArc(jdouble, jdouble, jdouble, jdouble, jdouble, jdouble, jint) = 0;
  virtual void setArc(::java::awt::geom::Point2D *, ::java::awt::geom::Dimension2D *, jdouble, jdouble, jint);
  virtual void setArc(::java::awt::geom::Rectangle2D *, jdouble, jdouble, jint);
  virtual void setArc(::java::awt::geom::Arc2D *);
  virtual void setArcByCenter(jdouble, jdouble, jdouble, jdouble, jdouble, jint);
  virtual void setArcByTangent(::java::awt::geom::Point2D *, ::java::awt::geom::Point2D *, ::java::awt::geom::Point2D *, jdouble);
  virtual void setAngleStart(jdouble) = 0;
  virtual void setAngleExtent(jdouble) = 0;
  virtual void setAngleStart(::java::awt::geom::Point2D *);
  virtual void setAngles(jdouble, jdouble, jdouble, jdouble);
  virtual void setAngles(::java::awt::geom::Point2D *, ::java::awt::geom::Point2D *);
  virtual void setArcType(jint);
  virtual void setFrame(jdouble, jdouble, jdouble, jdouble);
  virtual ::java::awt::geom::Rectangle2D * getBounds2D();
public: // actually protected
  virtual ::java::awt::geom::Rectangle2D * makeBounds(jdouble, jdouble, jdouble, jdouble) = 0;
public:
  virtual jboolean containsAngle(jdouble);
  virtual jboolean contains(jdouble, jdouble);
  virtual jboolean intersects(jdouble, jdouble, jdouble, jdouble);
  virtual jboolean contains(jdouble, jdouble, jdouble, jdouble);
  virtual jboolean contains(::java::awt::geom::Rectangle2D *);
  virtual ::java::awt::geom::PathIterator * getPathIterator(::java::awt::geom::AffineTransform *);
  static const jint OPEN = 0;
  static const jint CHORD = 1;
  static const jint PIE = 2;
public: // actually package-private
  jint __attribute__((aligned(__alignof__( ::java::awt::geom::RectangularShape)))) type;
public:
  static ::java::lang::Class class$;
};

#endif // __java_awt_geom_Arc2D__
