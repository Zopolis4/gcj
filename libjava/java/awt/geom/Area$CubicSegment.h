
// DO NOT EDIT THIS FILE - it is machine generated -*- c++ -*-

#ifndef __java_awt_geom_Area$CubicSegment__
#define __java_awt_geom_Area$CubicSegment__

#pragma interface

#include <java/awt/geom/Area$Segment.h>
#include <gcj/array.h>

extern "Java"
{
  namespace java
  {
    namespace awt
    {
      namespace geom
      {
          class AffineTransform;
          class Area;
          class Area$CubicSegment;
          class Area$Segment;
          class CubicCurve2D;
          class Point2D;
          class Rectangle2D;
      }
    }
  }
}

class java::awt::geom::Area$CubicSegment : public ::java::awt::geom::Area$Segment
{

public:
  Area$CubicSegment(::java::awt::geom::Area *, jdouble, jdouble, jdouble, jdouble, jdouble, jdouble, jdouble, jdouble);
  virtual ::java::lang::Object * clone();
public: // actually package-private
  virtual jdouble curveArea();
  virtual jboolean equals(::java::awt::geom::Area$Segment *);
  virtual ::java::awt::geom::Point2D * evaluatePoint(jdouble);
  virtual ::java::awt::geom::Rectangle2D * getBounds();
  virtual ::java::awt::geom::CubicCurve2D * getCubicCurve2D();
  virtual JArray< jdouble > * getLoop();
  virtual ::java::awt::geom::Point2D * getMidPoint();
  virtual jint getType();
  virtual jint pathIteratorFormat(JArray< jdouble > *);
  virtual jint rayCrossing(jdouble, jdouble);
  virtual void reverseCoords();
  virtual jint splitIntersections(::java::awt::geom::Area$Segment *);
  virtual void subdivideInsert(jdouble);
  virtual void transform(::java::awt::geom::AffineTransform *);
  ::java::awt::geom::Point2D * __attribute__((aligned(__alignof__( ::java::awt::geom::Area$Segment)))) cp1;
  ::java::awt::geom::Point2D * cp2;
  ::java::awt::geom::Area * this$0;
public:
  static ::java::lang::Class class$;
};

#endif // __java_awt_geom_Area$CubicSegment__
