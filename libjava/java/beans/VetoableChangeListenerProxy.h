
// DO NOT EDIT THIS FILE - it is machine generated -*- c++ -*-

#ifndef __java_beans_VetoableChangeListenerProxy__
#define __java_beans_VetoableChangeListenerProxy__

#pragma interface

#include <java/util/EventListenerProxy.h>
extern "Java"
{
  namespace java
  {
    namespace beans
    {
        class PropertyChangeEvent;
        class VetoableChangeListener;
        class VetoableChangeListenerProxy;
    }
  }
}

class java::beans::VetoableChangeListenerProxy : public ::java::util::EventListenerProxy
{

public:
  VetoableChangeListenerProxy(::java::lang::String *, ::java::beans::VetoableChangeListener *);
  virtual void vetoableChange(::java::beans::PropertyChangeEvent *);
  virtual ::java::lang::String * getPropertyName();
public: // actually package-private
  ::java::lang::String * __attribute__((aligned(__alignof__( ::java::util::EventListenerProxy)))) propertyName;
public:
  static ::java::lang::Class class$;
};

#endif // __java_beans_VetoableChangeListenerProxy__
